<style>
    #vmApDungNhomHoTro th {
        text-align: center;
        vertical-align: middle
    }

    #vmApDungNhomHoTro .span-group {
        font-size: 14px;
        color: var(--color-main);
        text-decoration: underline
    }

    #vmApDungNhomHoTro .td-stt {
        width: 5%;
    }

    #vmApDungNhomHoTro .td-action {
        width: 15%;
    }

    #vmApDungNhomHoTro .span-i {
        font-size: 15px;
    }

    #vmApDungNhomHoTro table input[type=text] {
        border: none;
        outline: none;
        border-bottom: 1px solid #ccc !important
    }

    #vmApDungNhomHoTro table .td-input-bottom {
        vertical-align: bottom;
    }

    #vmApDungNhomHoTro .number {
        width: 15%;
    }

    #vmApDungNhomHoTro .ghichubr {
        width: 100%;
        padding: 0px !important;
        text-align: left;
        font-style: italic;
        font-size: 12px !important;
        color: blue;
    }
</style>
<div id="vmApDungNhomHoTro" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content ">
            <div class="modal-header">
                <button class="close close-modal" type="button" data-dismiss="modal">×</button>
                <h4 class="modal-title">{{typeUpdate == 0?'Hóa đơn hỗ trợ':'Áp dụng hỗ trợ'}}</h4>
            </div>
            <div class="modal-body">
                <div v-if="typeUpdate == 0">
                    <div class="form-group">
                        <div class="col-sm-6 col-md-6 col-lg-6 col-xs-12 nopadding-left">
                            <div class="col-sm-5 col-md-4 col-lg-4 col-xs-12">
                                <label>Mã hóa đơn:</label>
                            </div>
                            <div class="col-sm-7 col-md-8 col-lg-8 col-xs-12">
                                XHT0001
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-6 col-xs-12 nopadding-left">
                            <div class="col-sm-5 col-md-4 col-lg-4 col-xs-12">
                                <label>Khách hàng:</label>
                            </div>
                            <div class="col-sm-7 col-md-8 col-lg-8 col-xs-12">
                                KH0001
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-6 col-md-6 col-lg-6 col-xs-12 nopadding-left">
                            <div class="col-sm-5 col-md-4 col-lg-4 col-xs-12">
                                <label>Ngày lập:</label>
                            </div>
                            <div class="col-sm-7 col-md-8 col-lg-8 col-xs-12">
                                XHT0001
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-6 col-xs-12 nopadding-left">
                            <div class="col-sm-5 col-md-4 col-lg-4 col-xs-12">
                                <label>Người tạo:</label>
                            </div>
                            <div class="col-sm-7 col-md-8 col-lg-8 col-xs-12">
                                KH0001
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group" v-if="typeUpdate !== 0">
                    <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                        <span class="span-group">Chọn nhóm áp dụng</span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                        <div class="table-reponsive table_price table_error table-frame">
                            <table class="table">
                                <thead class="thead-boder">
                                    <tr>
                                        <th class="td-stt">#</th>
                                        <th>Tên  nhóm hàng hóa (dịch vụ)</th>
                                        <th style="width: 15%">Xuất ngày thuốc</th>
                                        <th style="width: 20%">Số ngày</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-for="(item, index) in NhomHangEnoughCondition">
                                        <td class="text-center">
                                            <input type="radio" name="rdoApply" value="true" v-model="item.IsApply"
                                                   v-on:change="ChoseNhomApply(index,item)" />
                                        </td>
                                        <td>
                                            {{item.TenNhomHangHoa}}
                                        </td>
                                        <td class="text-center">
                                            <input type="checkbox" value="true" v-model="item.IsXuatNgayThuoc" v-on:change="ChangeCheck_XuatNgayThuoc(index)" />
                                        </td>
                                        <td>
                                            <input class="form-control text-right" onkeypress="keypressNumber_limitNumber(event,this)"
                                                   v-bind:disabled="!item.IsXuatNgayThuoc"
                                                   v-on:keyup="EditNgayThuoc(index)"
                                                   v-model="item.SoNgayThuoc" />
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                        <span class="span-group">Sản phẩm hỗ trợ chung</span>
                    </div>
                </div>
                <div class="form-group margin-top-10" v-if="typeUpdate !== 0">
                    <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                        <div class="css-form-detail">
                            <products :con-ton-kho="0"
                                      :loai-hang-hoa="1"
                                      :show-gia-von="true"
                                      :show-image="false"
                                      :show-ton-kho="false"
                                      :id-chi-nhanh="inforLogin.ID_DonVi"
                                      :role-add="false"
                                      :have-condition="true"
                                      :list-all="listData.AllPublicProducts"
                                      v-on:chose-product="ChoseProduct_Public">
                            </products>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12" v-if="PublicProducts.length > 0">
                        <div class="table-reponsive table_price table_error table-frame"
                             style=" overflow: auto; max-height: 400px">
                            <table class="table">
                                <thead class="thead-boder">
                                    <tr>
                                        <th>Tên dịch vụ</th>
                                        <th class="number">Số lượng</th>
                                        <th class="td-action">#</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-for="(item, index) in PublicProducts">
                                        <td>
                                            <span>
                                                <span>
                                                    {{item.TenHangHoa}}
                                                </span>
                                                <span class="blue" v-if="item.TenDonViTinh">
                                                    ({{item.TenDonViTinh}})
                                                </span>
                                            </span><br />
                                            <input type="text" placeholder="Ghi chú" class="ghichubr"
                                                   v-on:keyup.13="Enter_FocusNext(0)"
                                                   v-on:keyup="PublicProducts_EditGhiChu(index)" />
                                        </td>
                                        <td class="td-input-bottom">
                                            <input type="text"
                                                   class="form-control text-right"
                                                   onkeypress="keypressNumber_limitNumber(event,this)"
                                                   v-model="item.TienChietKhau"
                                                   v-on:keyup.13="Enter_FocusNext(1)"
                                                   v-on:keyup="PublicProducts_EditTienChietKhau(index, item)" />
                                        </td>
                                        <td class="text-center td-action td-input-bottom">
                                            <a>
                                                <span class="span-i" v-on:click="PublicProducts_Remove(index)" title="Xóa dòng">
                                                    <i class="fal fa-times"></i>
                                                </span>  &nbsp;
                                                <span class="span-i" title="Hoa hồng nhân viên" v-on:click="showModal_HoaHongNV(item)">
                                                    <i class="fa fa-user"></i>
                                                </span>&nbsp;
                                                <span class="span-i" title="Thành phần định lượng" v-on:click="showModalTPDL(item)"
                                                      v-if="item.LoaiHangHoa == 2">
                                                    <i class="fa fa-list-alt"></i>
                                                </span>
                                            </a>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div v-if="NhomHangApply.IsXuatNgayThuoc">
                    <div class="form-group">
                        <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                            <span class="span-group">Sản phẩm hỗ trợ theo ngày thuốc</span>
                        </div>
                    </div>
                    <div class="form-group margin-top-10" v-if="typeUpdate !== 0">
                        <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                            <div class="css-form-detail">
                                <products :con-ton-kho="0"
                                          :loai-hang-hoa="1"
                                          :show-gia-von="true"
                                          :show-image="false"
                                          :show-ton-kho="false"
                                          :id-chi-nhanh="inforLogin.ID_DonVi"
                                          :role-add="false"
                                          :have-condition="true"
                                          :list-all="listData.AllDayProducts"
                                          v-on:chose-product="ChoseProduct_Day">
                                </products>
                            </div>

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12" v-if="DayProducts.length > 0">
                            <div class="table-reponsive table_price table_error table-frame"
                                 style=" overflow: auto; max-height: 400px">
                                <table class="table">
                                    <thead class="thead-boder">
                                        <tr>
                                            <th>Tên hàng hóa</th>
                                            <th class="number">Số lượng/ngày</th>
                                            <th class="number">Tổng xuất</th>
                                            <th class="td-stt">#</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr v-for="(item, index) in DayProducts">
                                            <td>
                                                <span>
                                                    <span>
                                                        {{item.TenHangHoa}}
                                                    </span>
                                                    <span class="blue" v-if="item.TenDonViTinh">
                                                        ({{item.TenDonViTinh}})
                                                    </span>
                                                </span><br />
                                                <input type="text" placeholder="Ghi chú" class="ghichubr"
                                                       v-on:keyup.13="Enter_FocusNext(0)"
                                                       v-on:keyup="DayProducts_EditGhiChu(index)" />

                                            </td>
                                            <td class="td-input-bottom">
                                                <input type="text"
                                                       class="form-control text-right"
                                                       onkeypress="keypressNumber_limitNumber(event,this)"
                                                       v-model="item.TienChietKhau"
                                                       v-on:keyup.13="Enter_FocusNext(1)"
                                                       v-on:keyup="DayProducts_EditTienChietKhau(index)" />
                                            </td>
                                            <td class="td-input-bottom">
                                                <input type="text"
                                                       class="form-control text-right"
                                                       onkeypress="keypressNumber_limitNumber(event,this)"
                                                       v-on:keyup.13="Enter_FocusNext(2)"
                                                       v-model="item.SoLuong"
                                                       readonly />
                                            </td>
                                            <td class="text-center td-stt td-input-bottom">
                                                <a>
                                                    <span class="span-i" v-on:click="DayProducts_Remove(index)" title="Xóa dòng">
                                                        <i class="fal fa-times"></i>
                                                    </span>  &nbsp;
                                                </a>
                                            </td>
                                        </tr>
                                    </tbody>
                                    <tfoot>
                                        <tr class="bg12 bold">
                                            <td colspan="2" class="text-left">Tổng cộng</td>
                                            <td class="text-right">{{formatNumber3Digit(TongXuatNgayThuoc)}}</td>
                                            <td></td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="container-fluid">
                    <button type="button" class="btn btn-cancel" data-dismiss="modal">
                        <i class="fal fa-ban"></i> {{typeUpdate == 0?'Đóng':'Bỏ qua'}}
                    </button>
                    <button type="button" class="btn btn-main" v-if="!isLoading && typeUpdate!== 0" v-on:click="Agree">
                        <i class="fa fa-save"></i> {{typeUpdate==1?'Áp dụng':'Cập nhật'}}
                    </button>
                    <button type="button" class="btn btn-main" v-if="isLoading">
                        <i class="fa fa-save"></i> Đang lưu
                    </button>
                </div>
            </div>
        </div>

    </div>
</div>
<script>
    var vmApDungNhomHoTro = new Vue({
        el: '#vmApDungNhomHoTro',
        components: {
            'products': cmpChoseProduct,
        },
        created: function () {
            var self = this;
            self.UrlAPI = {
                NhomHang: '/api/DanhMuc/DM_NhomHangHoaAPI/',
                HoaDon: '/api/DanhMuc/BH_HoaDonAPI/',
            }

            self.inforLogin = {
                ID_DonVi: $('#txtDonVi').val(),
                ID_NhanVien: $('#txtIDNhanVien').val(),
                UserLogin: $('#txtUserLogin').val(),
            }

            if (commonStatisJs.CheckNull(self.inforLogin.ID_DonVi)) {
                self.inforLogin = {
                    ID_DonVi: VHeader.IdDonVi,
                    ID_NhanVien: VHeader.IdNhanVien,
                    UserLogin: VHeader.UserLogin,
                };
            }
            console.log('apdung')
            self.GetListNhomHang_SetupHotro();
        },
        data: {
            saveOK: false,
            isLoading: false,
            typeUpdate: 1,// 1.insert, 2.update, 0.view
            typeProduct: 1,// 1.sp ngaythuoc, 0. sp chung
            listData: {
                AllNhomHangs: [],
                AllPublicProducts: [],
                AllDayProducts: [],
                NhomHang_TongSuDung: [],
            },

            NhomHangApply: { TenNhomHangHoa: '', Id_NhomHang: null, IsXuatNgayThuoc: false, SoNgayThuoc: 0 },
            PublicProducts: [],
            DayProducts: [],
            NhomHangEnoughCondition: [],

            TongXuatNgayThuoc: 0,
            TongXuatChung: 0,

            newHDHoaTro: {
                IDRandomHD: '',
                ID_NhomHang: null,
                SoNgayThuoc: 0,
                IsXuatNgayThuoc: false,
                SPChung: [],
                SPNgayThuoc: [],
                // used to save diary
                TenNhomHangHoa: '',
                MaDoiTuong: '',
                TenDoiTuong: '',
            }
        },
        methods: {
            GetListNhomHang_SetupHotro: function () {
                let self = this;
                self.listData.AllNhomHangs = [];
                let param = {
                    IDChiNhanhs: [self.inforLogin.ID_DonVi]
                }
                ajaxHelper(self.UrlAPI.NhomHang + 'GetListNhomHang_SetupHoTro', 'POST', param).done(function (x) {
                    console.log('GetListNhomHang_SetupHoTro', x)
                    if (x.res) {
                        self.listData.AllNhomHangs = x.dataSoure;
                    }
                })
            },
            GetTongGiaTriSuDung_ofKhachHang: function (idCus, toDate = null) {
                let self = this;
                if (!commonStatisJs.CheckNull(idCus) && idCus.indexOf('00000') === -1) {
                    if (commonStatisJs.CheckNull(toDate)) {
                        toDate = moment(new Date()).add(2, 'seconds').format('YYYY-MM-DD HH:mm')
                    }
                    let param = {
                        IDCustomers: [idCus],
                        IDChiNhanhs: [self.inforLogin.ID_DonVi],
                        DateTo: toDate,
                    }
                    ajaxHelper(self.UrlAPI.NhomHang + 'GetTongGiaTriSuDung_ofKhachHang', 'POST', param).done(function (x) {
                        console.log('GetTongGiaTriSuDung_ofKhachHang', x)
                        if (x.res) {
                            self.listData.NhomHang_TongSuDung = x.dataSoure;
                        }
                    })
                }
                else {
                    self.listData.NhomHang_TongSuDung = [];
                }
            },
            NhomHang_GetListSanPhamHoTro: function () {
                let self = this;
                if (!commonStatisJs.CheckNull(self.NhomHangApply.Id_NhomHang)) {
                    $.getJSON(self.UrlAPI.NhomHang + 'NhomHang_GetListSanPhamHoTro?idNhom=' + self.NhomHangApply.Id_NhomHang).done(function (x) {
                        let sp_public = [], sp_day = [];
                        if (x.res) {
                            sp_public = $.grep(x.dataSoure, function (x1) {
                                return x1.LaSanPhamNgayThuoc === 0;
                            });
                            sp_day = $.grep(x.dataSoure, function (x1) {
                                return x1.LaSanPhamNgayThuoc === 1;
                            });
                        }
                        self.listData.AllPublicProducts = sp_public;
                        self.listData.AllDayProducts = sp_day;
                    })
                }
                else {
                    self.listData.AllPublicProducts = [];
                    self.listData.AllDayProducts = [];
                }
            },
            ChoseNhomApply: function (index, item) {
                let self = this;
                let $this = $(event.currentTarget);
                let isCheck = $this.is(':checked');

                if (isCheck) {
                    self.NhomHangApply.TenNhomHangHoa = item.TenNhomHangHoa;
                    self.NhomHangApply.Id_NhomHang = item.Id_NhomHang;
                }

                for (let i = 0; i < self.NhomHangEnoughCondition.length; i++) {
                    if (i === index) {
                        self.NhomHangEnoughCondition[i].IsApply = isCheck;
                    }
                    else {
                        self.NhomHangEnoughCondition[i].IsApply = false;
                    }
                }
                self.NhomHang_GetListSanPhamHoTro();
            },
            ChangeCheck_XuatNgayThuoc: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                let isCheck = $this.is(':checked');
                if (!isCheck) {
                    self.DayProducts = [];
                }
                self.NhomHangApply.IsXuatNgayThuoc = isCheck;

                for (let i = 0; i < self.NhomHangEnoughCondition.length; i++) {
                    if (i === index) {
                        self.NhomHangEnoughCondition[i].IsXuatNgayThuoc = isCheck;
                        break;
                    }
                }
            },
            showModal: function (hdChosing) {
                let self = this;
                self.saveOK = false;
                self.isLoading = false;
                self.typeUpdate = 1;
                self.TongXuatNgayThuoc = 0;
                self.TongXuatChung = 0;
                self.NhomHangApply = { TenNhomHangHoa: '', Id_NhomHang: null, IsXuatNgayThuoc: false, SoNgayThuoc: 0 };
                self.PublicProducts = [];
                self.DayProducts = [];
                self.NhomHangEnoughCondition = [];
                self.InvoiceChosing = hdChosing;

                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                // find cache cthd && group by nhomhang
                let cthd = localStorage.getItem('lstCTHDLe');
                if (cthd != null) {
                    cthd = JSON.parse(cthd);
                }
                else {
                    cthd = [];
                }

                let arrIDNhom_Setup = $.map(self.listData.AllNhomHangs, function (x) {
                    return x.Id_NhomHang;
                })

                let arrNhom_Cache = [], arrIDNhom_Cache = [];
                for (let i = 0; i < cthd.length; i++) {
                    let itfor = cthd[i];
                    if (!arrIDNhom_Cache.includes(itfor.ID_NhomHangHoa)
                        && $.inArray(itfor.ID_NhomHangHoa, arrIDNhom_Setup) > -1) {// chi add neu exist in nhomhotro
                        arrIDNhom_Cache.push(itfor.ID_NhomHangHoa);
                        let arrHH = cthd.filter(x => x.ID_NhomHangHoa === itfor.ID_NhomHangHoa);

                        let sum_truocVAT = 0;
                        for (let k = 0; k < arrHH.length; k++) {
                            let for2 = arrHH[k];
                            sum_truocVAT += formatNumberToFloat(for2.SoLuong) *
                                (formatNumberToFloat(for2.DonGia) - formatNumberToFloat(for2.TienChietKhau));
                        }

                        arrNhom_Cache.push({
                            Id_NhomHang: itfor.ID_NhomHangHoa,
                            TongGiaTriSuDung: sum_truocVAT,
                        })
                    }
                }
                console.log('arrNhom_Cache ', arrNhom_Cache)

                let arrNhomUnion = [], arrIDNhom_Union = [], arrUnionAfter = [];
                if (!commonStatisJs.CheckNull(self.InvoiceChosing.ID) && self.InvoiceChosing.ID !== const_GuidEmpty) {
                    // update again hoadon (todo)
                }
                else {
                    // sum gtri sudung in (cache + DB)
                    arrNhomUnion = $.merge(arrNhom_Cache, self.listData.NhomHang_TongSuDung);

                    for (let i = 0; i < arrNhomUnion.length; i++) {
                        let itfor = arrNhomUnion[i];
                        if (!arrIDNhom_Union.includes(itfor.Id_NhomHang)) {// chi add neu exist in nhomhotro
                            arrIDNhom_Union.push(itfor.Id_NhomHang);
                            let arrHH = arrNhomUnion.filter(x => x.Id_NhomHang === itfor.Id_NhomHang);

                            let tongSD = 0;
                            for (let k = 0; k < arrHH.length; k++) {
                                let for2 = arrHH[k];
                                tongSD += formatNumberToFloat(for2.TongGiaTriSuDung);
                            }

                            arrUnionAfter.push({
                                Id_NhomHang: itfor.Id_NhomHang,
                                TongGiaTriSuDung: tongSD,
                            })
                        }
                    }
                }
                console.log('arrUnionAfter', arrUnionAfter)

                let arrIDNhom = [];
                // get nhom thoa man dieu kien (gtritu - gtri den)
                for (let i = 0; i < arrUnionAfter.length; i++) {
                    let itFor = arrUnionAfter[i];
                    let arr = $.grep(self.listData.AllNhomHangs, function (x) {
                        return itFor.TongGiaTriSuDung >= x.GiaTriSuDungTu && itFor.TongGiaTriSuDung <= x.GiaTriSuDungDen;
                    });
                    if (arr.length > 0) {
                        for (let k = 0; k < arr.length; k++) {
                            let forIn = arr[k];
                            if ($.inArray(forIn.Id_NhomHang, arrIDNhom) === -1) {
                                arrIDNhom.push(forIn.Id_NhomHang);
                                let obj = {
                                    Id_NhomHang: forIn.Id_NhomHang,
                                    TenNhomHangHoa: forIn.TenNhomHangHoa,
                                    SoNgayThuoc: '',
                                    IsXuatNgayThuoc: false,
                                    IsApply: false,
                                }
                                self.NhomHangEnoughCondition.push(obj);
                            }
                        }
                    }
                }

                let exist = false;
                for (let i = 0; i < hdHoTro.length; i++) {
                    let itFor = hdHoTro[i];
                    if (itFor.IDRandomHD === hdChosing.IDRandom) {
                        exist = true;
                        self.newHDHoaTro.ID_NhomHang = itFor.ID_NhomHang;
                        self.newHDHoaTro.SoNgayThuoc = itFor.SoNgayThuoc;
                        self.newHDHoaTro.IsXuatNgayThuoc = itFor.IsXuatNgayThuoc;
                        self.newHDHoaTro.SPChung = itFor.SPChung;
                        self.newHDHoaTro.SPNgayThuoc = itFor.SPNgayThuoc;
                        self.newHDHoaTro.TenNhomHangHoa = itFor.TenNhomHangHoaa;
                        self.newHDHoaTro.MaDoiTuong = itFor.MaDoiTuong;
                        self.newHDHoaTro.TenDoiTuong = itFor.TenDoiTuong;

                        self.PublicProducts = itFor.SPChung;
                        self.DayProducts = itFor.SPNgayThuoc;
                        break;
                    }
                }

                if (self.NhomHangEnoughCondition.length > 0) {
                    if (!exist) {
                        self.NhomHangEnoughCondition[0].IsApply = true;
                        self.NhomHangEnoughCondition[0].IsXuatNgayThuoc = false;
                        self.NhomHangApply.Id_NhomHang = self.NhomHangEnoughCondition[0].Id_NhomHang;
                        self.NhomHangApply.TenNhomHangHoa = self.NhomHangEnoughCondition[0].TenNhomHangHoa;
                    }
                    else {
                        self.NhomHangApply.Id_NhomHang = self.newHDHoaTro.ID_NhomHang;
                        self.NhomHangApply.TenNhomHangHoa = self.newHDHoaTro.TenNhomHangHoa;
                        self.NhomHangApply.IsXuatNgayThuoc = self.newHDHoaTro.IsXuatNgayThuoc;
                        self.NhomHangApply.SoNgayThuoc = self.newHDHoaTro.SoNgayThuoc;

                        for (let i = 0; i < self.NhomHangEnoughCondition.length; i++) {
                            if (self.NhomHangEnoughCondition[i].Id_NhomHang == self.newHDHoaTro.ID_NhomHang) {
                                self.NhomHangEnoughCondition[i].IsApply = true;
                                self.NhomHangEnoughCondition[i].IsXuatNgayThuoc = self.newHDHoaTro.IsXuatNgayThuoc;
                                self.NhomHangEnoughCondition[i].SoNgayThuoc = self.newHDHoaTro.SoNgayThuoc;
                                break;
                            }
                        }
                    }
                }
                self.NhomHang_GetListSanPhamHoTro();
                self.Caculator_TongSLXuat(1);

                $('#vmApDungNhomHoTro').modal('show');
            },
            showModalUpdate: function (idNhom) {
                let self = this;
                self.saveOK = false;
                self.isLoading = false;
                self.typeUpdate = 2;

                self.PublicProducts = [];
                self.DayProducts = [];
                $('#vmApDungNhomHoTro').modal('show');
            },
            ChoseProduct_Public: function (item) {
                console.log('item')
                let self = this;
                let ex = $.grep(self.PublicProducts, function (x) {
                    return x.Id_DonViQuiDoi === item.Id_DonViQuiDoi && x.Id_LoHang === item.Id_LoHang;
                });
                if (ex.length > 0) {
                    ShowMessage_Danger('Dịch vụ đã được chọn');
                    return;
                }
                let obj = {
                    LoaiHangHoa: item.LoaiHangHoa,
                    Id_DonViQuiDoi: item.Id_DonViQuiDoi,
                    Id_LoHang: item.Id_LoHang,
                    MaHangHoa: item.MaHangHoa,
                    TenHangHoa: item.TenHangHoa,
                    TenDonViTinh: item.TenDonViTinh,
                    SoLuong: item.SoLuong,
                    TienChietKhau: item.SoLuong,// soluong * songaythuoc
                    GhiChu: '',
                    BH_NhanVienThucHien: [],
                    ThanhPhan_DinhLuong: [],
                };
                self.PublicProducts.unshift(obj);
                self.Caculator_TongSLXuat(0);
            },
            ChoseProduct_Day: function (item) {
                let self = this;
                let ex = $.grep(self.DayProducts, function (x) {
                    return x.Id_DonViQuiDoi === item.Id_DonViQuiDoi && x.Id_LoHang === item.Id_LoHang;
                });
                if (ex.length > 0) {
                    ShowMessage_Danger('Hàng hóa đã được chọn');
                    return;
                }
                let obj = {
                    LoaiHangHoa: item.LoaiHangHoa,
                    Id_DonViQuiDoi: item.Id_DonViQuiDoi,
                    Id_LoHang: item.Id_LoHang,
                    MaHangHoa: item.MaHangHoa,
                    TenHangHoa: item.TenHangHoa,
                    TenDonViTinh: item.TenDonViTinh,
                    TienChietKhau: item.SoLuong,
                    SoLuong: item.SoLuong * self.NhomHangApply.SoNgayThuoc,
                    GhiChu: '',
                    BH_NhanVienThucHien: [],
                    ThanhPhan_DinhLuong: [],
                };
                self.DayProducts.unshift(obj);
                self.Caculator_TongSLXuat(1);
            },
            PublicProducts_Remove: function (index) {
                let self = this;
                for (let i = 0; i < self.PublicProducts.length; i++) {
                    if (i === index) {
                        self.PublicProducts.splice(i, 1);
                        break;
                    }
                }
                self.Caculator_TongSLXuat(0);
            },
            DayProducts_Remove: function (index) {
                let self = this;
                for (let i = 0; i < self.DayProducts.length; i++) {
                    if (i === index) {
                        self.DayProducts.splice(i, 1);
                        break;
                    }
                }
                self.Caculator_TongSLXuat(1);
            },
            Caculator_TongSLXuat: function (type = 1) {
                let self = this;
                let sumSL = 0;
                switch (type) {
                    case 1:
                        for (let i = 0; i < self.DayProducts.length; i++) {
                            let itFor = self.DayProducts[i];
                            sumSL += formatNumberToFloat(itFor.SoLuong);
                        }
                        self.TongXuatNgayThuoc = sumSL;
                        break;
                }
            },
            Enter_FocusNext: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                let $tr = $this.closest('tr').next();
                $tr.find('td').eq(index).find('input').focus().select();
            },
            EditNgayThuoc: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                formatNumberObj($this);
                let gtri = $this.val();
                self.NhomHangApply.SoNgayThuoc = formatNumberToFloat($this.val());;

                for (let i = 0; i < self.NhomHangEnoughCondition.length; i++) {
                    if (i === index) {
                        self.NhomHangEnoughCondition[i].SoNgayThuoc = gtri;
                        break;
                    }
                }

                for (let i = 0; i < self.DayProducts.length; i++) {
                    self.DayProducts[i].SoLuong = formatNumberToFloat(self.DayProducts[i].TienChietKhau) * self.NhomHangApply.SoNgayThuoc;
                }
                self.Caculator_TongSLXuat(1);
            },
            PublicProducts_EditTienChietKhau: function (index, item) {
                let self = this;
                let $this = $(event.currentTarget);
                for (let i = 0; i < self.PublicProducts.length; i++) {
                    if (i === index) {
                        self.PublicProducts[i].TienChietKhau = $this.val();
                        break;
                    }
                }
                self.editSoLuong_UpdateTPDLuong(item, formatNumberToFloat($this.val()));
                self.editSoLuong_UpdateHoaHongNV(item, formatNumberToFloat($this.val()));
            },
            DayProducts_EditTienChietKhau: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                for (let i = 0; i < self.DayProducts.length; i++) {
                    if (i === index) {
                        self.DayProducts[i].TienChietKhau = $this.val();
                        self.DayProducts[i].SoLuong = formatNumberToFloat(self.DayProducts[i].TienChietKhau) * self.NhomHangApply.SoNgayThuoc;
                        break;
                    }
                }
            },
            PublicProducts_EditGhiChu: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                for (let i = 0; i < self.PublicProducts.length; i++) {
                    if (i === index) {
                        self.PublicProducts[i].GhiChu = $this.val();
                        break;
                    }
                }
            },
            DayProducts_EditGhiChu: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                for (let i = 0; i < self.DayProducts.length; i++) {
                    if (i === index) {
                        self.DayProducts[i].GhiChu = $this.val();
                        break;
                    }
                }
            },
            UpdateCTHD: function (item, loaiSP = 0, loaiUpdate = 0) {
                let self = this;
                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                for (let i = 0; i < hdHoTro.length; i++) {
                    if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                        switch (loaiSP) {
                            case 0://chung
                                for (let k = 0; k < hdHoTro[i].SPChung.length; k++) {
                                    let ct = hdHoTro[i].SPChung[k];
                                    if (ct.Id_DonViQuiDoi === item.Id_DonViQuiDoi && ct.Id_LoHang === item.Id_LoHang) {
                                        switch (loaiUpdate) {
                                            case 1:// soluong
                                                hdHoTro[i].SPChung[k].SoLuong = item.SoLuong;
                                                break;
                                            case 2:// ghichu
                                                hdHoTro[i].SPChung[k].GhiChu = item.GhiChu;
                                                break;
                                        }
                                        break;
                                    }
                                }
                                break;
                            case 1:// sp ngaythuoc
                                break;
                        }

                        break;
                    }
                }
                localStorage.setItem('hdHoTro', JSON.stringify(hdHoTro));
            },
            showModalTPDL: function (item) {
                let self = this;
                vmThanhPhanDinhLuong.DichVu_isDoing = item;

                // check exist cache
                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                let arrTPDL = [];
                for (let i = 0; i < hdHoTro.length; i++) {
                    if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                        for (let k = 0; k < hdHoTro[i].SPChung.length; k++) {
                            let ct = hdHoTro[i].SPChung[k];
                            if (ct.Id_DonViQuiDoi === item.Id_DonViQuiDoi && ct.Id_LoHang === item.Id_LoHang) {
                                arrTPDL = ct.ThanhPhan_DinhLuong;
                                break;
                            }
                        }
                        break;
                    }
                }
                vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed = arrTPDL;
                vmThanhPhanDinhLuong.showModal(false, false, 1);
            },
            Agree_TPDL: function () {
                let self = this;
                let ctDoing = vmThanhPhanDinhLuong.DichVu_isDoing;

                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                let ex = false;
                for (let i = 0; i < hdHoTro.length; i++) {
                    if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                        ex = true;
                        break;
                    }
                }

                if (!ex) {
                    hdHoTro.push({
                        IDRandomHD: self.InvoiceChosing.IDRandom,
                        ID_NhomHang: self.NhomHangApply.Id_NhomHang,
                        ID_DonVi: self.InvoiceChosing.ID_DonVi,
                        ID_DoiTuong: self.InvoiceChosing.ID_DoiTuong,
                        SoNgayThuoc: self.NhomHangApply.SoNgayThuoc,
                        IsXuatNgayThuoc: self.NhomHangApply.IsXuatNgayThuoc,
                        SPChung: self.PublicProducts,
                        SPNgayThuoc: self.DayProducts,
                        TenNhomHangHoa: self.NhomHangApply.TenNhomHangHoa,
                        MaDoiTuong: self.InvoiceChosing.MaDoiTuong,
                        TenDoiTuong: self.InvoiceChosing.TenDoiTuong,
                    })
                }

                for (let i = 0; i < hdHoTro.length; i++) {
                    if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                        for (let k = 0; k < hdHoTro[i].SPChung.length; k++) {
                            let ct = hdHoTro[i].SPChung[k];
                            if (ct.Id_DonViQuiDoi === ctDoing.Id_DonViQuiDoi && ct.Id_LoHang === ctDoing.Id_LoHang) {
                                hdHoTro[i].SPChung[k].ThanhPhan_DinhLuong = vmThanhPhanDinhLuong.Grid_TPDinhLuongChosed;
                                break;
                            }
                        }
                        break;
                    }
                }
                localStorage.setItem('hdHoTro', JSON.stringify(hdHoTro));
            },
            editSoLuong_UpdateTPDLuong: function (item, sluongNew) {
                let self = this;

                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                for (let i = 0; i < hdHoTro.length; i++) {
                    if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                        for (let k = 0; k < hdHoTro[i].SPChung.length; k++) {
                            let ct = hdHoTro[i].SPChung[k];
                            if (ct.Id_DonViQuiDoi === item.Id_DonViQuiDoi && ct.Id_LoHang === item.Id_LoHang) {
                                for (let m = 0; m < ct.ThanhPhan_DinhLuong.length; m++) {
                                    let tp = ct.ThanhPhan_DinhLuong[m];
                                    let soluongAfter = formatNumberToFloat(tp.SoLuongMacDinh) * sluongNew;
                                    ct.ThanhPhan_DinhLuong[m].SoLuong = soluongAfter;
                                    ct.ThanhPhan_DinhLuong[m].SoLuongQuyCach = soluongAfter * tp.QuyCach;
                                    ct.ThanhPhan_DinhLuong[m].GiaVonAfter = soluongAfter * tp.GiaVon;
                                }
                                break;
                            }
                        }
                        break;
                    }
                }
                localStorage.setItem('hdHoTro', JSON.stringify(hdHoTro));
            },
            showModal_HoaHongNV: function (item) {
                let self = this;
                let ctDoing = {
                    ID: null,
                    ID_DonViQuiDoi: item.Id_DonViQuiDoi,
                    ID_LoHang: item.Id_LoHang,
                    SoLuong: item.SoLuong,
                    DonGia: 0,
                    ThanhTien: 0,
                    LaPTPhiDichVu: true,
                    PhiDichVu: 0,
                    TongPhiDichVu: 0,
                    MaHangHoa: item.MaHangHoa,
                    TenHangHoa: item.TenHangHoa,
                    LaHangHoa: false,
                    LoaiHangHoa: item.LoaiHangHoa,
                    ChietKhauMD_NV: 0,
                    ChietKhauMD_NVTheoPT: false,
                }

                // chec exists cache NVTH (too)
                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                let arrNV = [];
                for (let i = 0; i < hdHoTro.length; i++) {
                    if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                        for (let k = 0; k < hdHoTro[i].SPChung.length; k++) {
                            let ct = hdHoTro[i].SPChung[k];
                            if (ct.Id_DonViQuiDoi === item.Id_DonViQuiDoi && ct.Id_LoHang === item.Id_LoHang) {
                                arrNV = ct.BH_NhanVienThucHien;
                                break;
                            }
                        }
                        break;
                    }
                }
                vmHoaHongDV.GridNV_TVTH = arrNV;
                vmHoaHongDV.inforHoaDon = $.extend({}, true, self.InvoiceChosing);
                vmHoaHongDV.inforHoaDon.LoaiHoaDon = 36;
                vmHoaHongDV.showModal(ctDoing, false, false);
            },
            Agree_HoaHongNV: function () {
                let self = this;
                let ctDoing = vmHoaHongDV.DichVu_isDoing;

                let nvTH = '', nvTV = '';
                let nvTH_Print = '', nvTV_Print = '';
                for (let i = 0; i < vmHoaHongDV.GridNV_TVTH.length; i++) {
                    let itemFor = vmHoaHongDV.GridNV_TVTH[i];
                    let dvtCK = ' đ';
                    let valCK = formatNumber3Digit(itemFor.TienChietKhau);
                    if (itemFor.PT_ChietKhau > 0) {
                        dvtCK = ' %';
                        valCK = formatNumber3Digit(itemFor.PT_ChietKhau);
                    }
                    switch (itemFor.TacVu) {
                        case 1: // thuchien
                        case 3: // thuchien theoyc
                            nvTH += itemFor.TenNhanVien + ' (' + valCK + dvtCK + '), ';
                            nvTH_Print += itemFor.TenNhanVien + ', ';
                            break;
                        case 2: // tuvan
                        case 4: // bangoi
                            nvTV += itemFor.TenNhanVien + ' (' + valCK + dvtCK + '), ';
                            nvTV_Print += itemFor.TenNhanVien + ', ';
                            break;
                    }
                }

                nvTH = nvTH !== '' ? 'Thực hiện: ' + Remove_LastComma(nvTH) : '';
                nvTH_Print = nvTH_Print !== '' ? Remove_LastComma(nvTH_Print) : '';
                nvTV = nvTV !== '' ? 'Tư vấn:' + Remove_LastComma(nvTV) : '';
                nvTV_Print = nvTV_Print !== '' ? Remove_LastComma(nvTV_Print) : '';

                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                let ex = false;
                for (let i = 0; i < hdHoTro.length; i++) {
                    if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                        ex = true;
                        break;
                    }
                }

                if (!ex) {
                    hdHoTro.push({
                        IDRandomHD: self.InvoiceChosing.IDRandom,
                        ID_NhomHang: self.NhomHangApply.Id_NhomHang,
                        ID_DonVi: self.InvoiceChosing.ID_DonVi,
                        ID_DoiTuong: self.InvoiceChosing.ID_DoiTuong,
                        SoNgayThuoc: self.NhomHangApply.SoNgayThuoc,
                        IsXuatNgayThuoc: self.NhomHangApply.IsXuatNgayThuoc,
                        SPChung: self.PublicProducts,
                        SPNgayThuoc: self.DayProducts,
                        TenNhomHangHoa: self.NhomHangApply.TenNhomHangHoa,
                        MaDoiTuong: self.InvoiceChosing.MaDoiTuong,
                        TenDoiTuong: self.InvoiceChosing.TenDoiTuong,
                    })
                }

                for (let i = 0; i < hdHoTro.length; i++) {
                    if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                        for (let k = 0; k < hdHoTro[i].SPChung.length; k++) {
                            let ct = hdHoTro[i].SPChung[k];
                            if (ct.Id_DonViQuiDoi === ctDoing.ID_DonViQuiDoi && ct.Id_LoHang === ctDoing.ID_LoHang) {
                                hdHoTro[i].SPChung[k].GhiChu_NVThucHien = nvTH;
                                hdHoTro[i].SPChung[k].GhiChu_NVThucHienPrint = nvTH_Print;
                                hdHoTro[i].SPChung[k].GhiChu_NVTuVan = nvTV;
                                hdHoTro[i].SPChung[k].GhiChu_NVTuVanPrint = nvTV_Print;
                                hdHoTro[i].SPChung[k].HoaHongTruocChietKhau = vmHoaHongDV.TinhHoaHongTruocCK ? 1 : 0;
                                hdHoTro[i].SPChung[k].BH_NhanVienThucHien = vmHoaHongDV.GridNV_TVTH;
                                break;
                            }
                        }
                        break;
                    }
                }
                localStorage.setItem('hdHoTro', JSON.stringify(hdHoTro));
            },
            editSoLuong_UpdateHoaHongNV: function (item, sluongNew) {
                let self = this;
                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                for (let i = 0; i < hdHoTro.length; i++) {
                    if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                        for (let k = 0; k < hdHoTro[i].SPChung.length; k++) {
                            let ct = hdHoTro[i].SPChung[k];
                            if (ct.Id_DonViQuiDoi === item.Id_DonViQuiDoi && ct.Id_LoHang === item.Id_LoHang) {
                                for (let m = 0; m < ct.BH_NhanVienThucHien.length; m++) {
                                    let nv = ct.BH_NhanVienThucHien[m];
                                    ct.BH_NhanVienThucHien[m].TienChietKhau = nv.ChietKhauMacDinh * sluongNew * nv.HeSo;
                                }
                                break;
                            }
                        }
                        break;
                    }
                }
                localStorage.setItem('hdHoTro', JSON.stringify(hdHoTro));
            },
            CheckSave: function () {
                let self = this;

                let nhomApply = self.NhomHangApply;
                if (commonStatisJs.CheckNull(nhomApply.Id_NhomHang)) {
                    ShowMessage_Danger('Chưa đủ điều kiện áp dụng hỗ trợ');
                    return;
                }

                if (self.PublicProducts.length === 0 && self.DayProducts.length === 0) {
                    ShowMessage_Danger('Vui lòng chọn sản phẩm hỗ trợ');
                    return false;
                }

                if (nhomApply.IsXuatNgayThuoc) {
                    if (nhomApply.SoNgayThuoc === 0) {
                        ShowMessage_Danger('Vui lòng nhập số ngày thuốc');
                        return false;
                    }
                    if (self.DayProducts.length === 0) {
                        ShowMessage_Danger('Vui lòng chọn sản phẩm hỗ trợ ngày thuốc');
                        return false;
                    }
                }

                let arrNumber0 = $.grep(self.PublicProducts, function (x) {
                    return formatNumberToFloat(x.SoLuong) == 0;
                })
                if (arrNumber0.length > 0) {
                    ShowMessage_Danger('Sản phẩm chung: Chưa nhập đủ thông tin cột Số lượng');
                    return false;
                }

                arrNumber0 = $.grep(self.DayProducts, function (x) {
                    return formatNumberToFloat(x.SoLuong) == 0;
                })
                if (arrNumber0.length > 0) {
                    ShowMessage_Danger('Sản phẩm ngày thuốc: Chưa nhập đủ thông tin cột Số lượng');
                    return false;
                }
                return true;
            },
            Agree: function () {
                let self = this;
                let check = self.CheckSave();
                if (!check) {
                    return;
                }
                if (self.typeUpdate === 1) {
                    self.saveOK = true;

                    let hdHoTro = localStorage.getItem('hdHoTro');
                    if (hdHoTro != null) {
                        hdHoTro = JSON.parse(hdHoTro);
                    }
                    else {
                        hdHoTro = [];
                    }

                    let ex = false;
                    for (let i = 0; i < hdHoTro.length; i++) {
                        if (hdHoTro[i].IDRandomHD === self.InvoiceChosing.IDRandom) {
                            ex = true;
                            hdHoTro[i].ID_NhomHang = self.NhomHangApply.Id_NhomHang;
                            hdHoTro[i].SoNgayThuoc = self.NhomHangApply.SoNgayThuoc;
                            hdHoTro[i].IsXuatNgayThuoc = self.NhomHangApply.IsXuatNgayThuoc;
                            if (hdHoTro[i].SPChung.length === 0) {// because spchung was assign TPDinhLuong & NVThucHien
                                hdHoTro[i].SPChung = self.PublicProducts;
                            }
                            if (hdHoTro[i].SPNgayThuoc.length === 0) {
                                hdHoTro[i].SPNgayThuoc = self.DayProducts;
                            }
                            hdHoTro[i].TenNhomHangHoa = self.NhomHangApply.TenNhomHangHoa;
                            hdHoTro[i].ID_DoiTuong = self.InvoiceChosing.ID_DoiTuong;
                            hdHoTro[i].MaDoiTuong = self.InvoiceChosing.MaDoiTuong;
                            hdHoTro[i].TenDoiTuong = self.InvoiceChosing.TenDoiTuong;
                            break;
                        }
                    }

                    if (!ex) {
                        hdHoTro.push({
                            IDRandomHD: self.InvoiceChosing.IDRandom,
                            ID_NhomHang: self.NhomHangApply.Id_NhomHang,
                            ID_DonVi: self.InvoiceChosing.ID_DonVi,
                            ID_DoiTuong: self.InvoiceChosing.ID_DoiTuong,
                            SoNgayThuoc: self.NhomHangApply.SoNgayThuoc,
                            IsXuatNgayThuoc: self.NhomHangApply.IsXuatNgayThuoc,
                            SPChung: self.PublicProducts,
                            SPNgayThuoc: self.DayProducts,
                            TenNhomHangHoa: self.NhomHangApply.TenNhomHangHoa,
                            MaDoiTuong: self.InvoiceChosing.MaDoiTuong,
                            TenDoiTuong: self.InvoiceChosing.TenDoiTuong,
                        })
                    }
                    localStorage.setItem('hdHoTro', JSON.stringify(hdHoTro));
                }
                else {

                }
                $('#vmApDungNhomHoTro').modal('hide');
            },
            saveHoaDonHoTro: function (idRandomHD) {
                let self = this;
                let hdHoTro = localStorage.getItem('hdHoTro');
                if (hdHoTro != null) {
                    hdHoTro = JSON.parse(hdHoTro);
                }
                else {
                    hdHoTro = [];
                }

                let hdEx = $.grep(hdHoTro, function (x) {
                    return x.IDRandomHD === idRandomHD;
                });

                if (hdEx.length > 0) {
                    let hd = {
                        LoaiHoaDon: 36,
                        ID_DonVi: hdEx[0].ID_DonVi,
                        ID_DoiTuong: hdEx[0].ID_DoiTuong,
                        ID_CheckIn: hdEx[0].ID_NhomHang,
                        ID_NhanVien: self.inforLogin.ID_NhanVien,
                        NguoiTao: self.inforLogin.UserLogin,
                        TongGiamGia: formatNumberToFloat(hdEx[0].SoNgayThuoc),
                        NgayLapHoaDon: moment(new Date()).format('YYYY-MM-DD HH:mm:ss'),
                        ChoThanhToan: false,
                    };

                    let cthd = [];
                    let sListSP = '', sChung = '', sNgay = '';
                    if (hdEx[0].SPChung.length > 0) {
                        sListSP = '<br /> <b> Sản phẩm hỗ trợ chung gồm: </b>';
                    }

                    for (let i = 0; i < hdEx[0].SPChung.length; i++) {
                        let itFor = hdEx[0].SPChung[i];
                        let obj = {
                            SoThuTu: cthd.length + 1,
                            MaHangHoa: itFor.MaHangHoa,
                            TenHangHoa: itFor.TenHangHoa,
                            ID_DonViQuiDoi: itFor.Id_DonViQuiDoi,
                            ID_LoHang: itFor.Id_LoHang,
                            SoLuong: itFor.SoLuong,
                            TienChietKhau: itFor.TienChietKhau,
                            GhiChu: itFor.GhiChu,
                            BH_NhanVienThucHien: itFor.BH_NhanVienThucHien,
                            ThanhPhan_DinhLuong: itFor.ThanhPhan_DinhLuong,
                            ChatLieu: ''
                        }
                        cthd.push(obj);
                        sChung += ' <br /> '.concat(obj.SoThuTu, '. ', obj.TenHangHoa, ' (', obj.MaHangHoa,
                            ') Số lượng ', obj.TienChietKhau);
                    }
                    sListSP += sChung;

                    if (hdEx[0].SPNgayThuoc.length > 0) {
                        sListSP += '<br /> <b> Sản phẩm hỗ trợ ngày thuốc gồm: </b>';
                    }
                    for (let i = 0; i < hdEx[0].SPNgayThuoc.length; i++) {
                        let itFor = hdEx[0].SPNgayThuoc[i];
                        let obj = {
                            SoThuTu: cthd.length + 1,
                            MaHangHoa: itFor.MaHangHoa,
                            TenHangHoa: itFor.TenHangHoa,
                            ID_DonViQuiDoi: itFor.Id_DonViQuiDoi,
                            ID_LoHang: itFor.Id_LoHang,
                            SoLuong: itFor.SoLuong,
                            TienChietKhau: itFor.TienChietKhau,
                            GhiChu: itFor.GhiChu,
                            BH_NhanVienThucHien: itFor.BH_NhanVienThucHien,
                            ThanhPhan_DinhLuong: itFor.ThanhPhan_DinhLuong,
                            ChatLieu: '6' // !important: used to create phieuxuat SPNgaythuoc
                        }
                        cthd.push(obj);
                        sNgay += ' <br /> '.concat(obj.SoThuTu, '. ', obj.TenHangHoa, ' (', obj.MaHangHoa,
                            ') Số lượng ', obj.TienChietKhau, '/ngày, Tổng xuất ', obj.SoLuong);
                    }
                    sListSP += sNgay;

                    let myData = {
                        objHoaDon: hd,
                        objCTHoaDon: cthd,
                    }

                    ajaxHelper(self.UrlAPI.HoaDon + 'Post_HoaDonHoTro'
                        + '?idNhanVien=' + self.inforLogin.ID_NhanVien, 'POST', myData).done(function (x) {
                            if (x.res) {

                                let data = x.data;
                                let diary = {
                                    ID_DonVi: self.inforLogin.ID_DonVi,
                                    ID_NhanVien: self.inforLogin.ID_NhanVien,
                                    LoaiNhatKy: 1,
                                    ChucNang: 'Áp dụng hỗ trợ ',
                                    NoiDung: 'Thêm mới hóa đơn hỗ trợ '.concat(data.MaHoaDon,
                                        ', Khách hàng ', hdEx[0].TenDoiTuong, '(', hdEx[0].MaDoiTuong, ')'),
                                    NoiDungChiTiet: 'Nội dung chi tiết '.concat(' <br /> Tên nhóm hàng: ', hdEx[0].TenNhomHangHoa,
                                        sListSP, ' <br /> Người tạo: ', hd.NguoiTao),
                                    LoaiHoaDon: 36,
                                    ID_HoaDon: data.ID,
                                    ThoiGianUpdateGV: data.NgayLapHoaDon
                                }
                                Post_NhatKySuDung_UpdateGiaVon(diary);

                                hdHoTro = $.grep(hdHoTro, function (x) {
                                    return x.IDRandomHD !== idRandomHD;
                                });
                                localStorage.setItem('hdHoTro', JSON.stringify(hdHoTro));

                                ajaxHelper(self.UrlAPI.HoaDon + 'CreatePhieuXuatKho_NguyenVatLieu?idHoaDon=' + data.ID, 'GET').done(function (x) {
                                    if (x.res) {
                                        console.log('CreatePhieuXuatKho_NguyenVatLieu ', x);
                                    }
                                })

                                if (hdEx[0].SPChung.length > 0) {
                                    $.getJSON(self.UrlAPI.HoaDon + 'CreatePhieuXuat_FromHoaDon?idHoaDon=' + data.ID
                                        + "&loaiHoaDon=36").done(function (x) {
                                            if (x.res) {
                                                console.log('xuat hotro chung ', x);
                                            }
                                        })
                                }

                                if (hdEx[0].SPNgayThuoc.length > 0) {
                                    $.getJSON(self.UrlAPI.HoaDon + 'CreatePhieuXuat_FromHoaDon?idHoaDon=' + data.ID
                                        + "&loaiHoaDon=36" + '&isXuatNgayThuoc=true').done(function (x) {
                                            if (x.res) {
                                                console.log('xuatngaythuoc ', x);
                                            }
                                        })
                                }
                            }
                        }).always(function () {

                        })
                }
            }
        }
    })

    $('#vmThanhPhanDinhLuong').on('hidden.bs.modal', function () {
        if (vmThanhPhanDinhLuong.saveOK && vmThanhPhanDinhLuong.formType === 1) {
            vmApDungNhomHoTro.Agree_TPDL();
        }
    })

    $('#vmEditHoaHongDV').on('hidden.bs.modal', function () {
        if (vmHoaHongDV.saveOK && vmHoaHongDV.inforHoaDon.LoaiHoaDon === 36) {
            if (vmHoaHongDV.isNew) {
                vmApDungNhomHoTro.Agree_HoaHongNV();
            }
        }
    })

    // insert object at index
    Array.prototype.insert = function (index, item) {
        this.splice(index, 0, item);
    };
</script>