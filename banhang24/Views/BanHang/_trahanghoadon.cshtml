@using banhang24.Hellper
<div class="modal fade" id="vmTraHang">
    <div class="modal-dialog draggable   modal-lgmax" role="document" style="    width: 80vw;    margin: 30px auto;">
        <div class="modal-content  ">
            <div class="modal-header draggable ">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i class="material-icons">close</i>
                </button>
                <h4 class="modal-title">
                    {{LoaiHoaDon===19?'Trả gói dịch vụ':'Trả hàng hóa đơn'}}
                </h4>
            </div>
            <div class="modal-body">
                <div class="flex flex-row flex-between " style="padding:0 0  10px 0">
                    <div class="flex col-xs-12 col-md-8 col-lg-6 nopadding" style="align-items:center">
                        <div class=" flex nopadding" style="align-items:center;">
                            <label class="width-75" style="margin-right:5px;">Từ ngày</label>
                            <date-time :date-chose="filter.DateFrom" placeholder="Từ ngày" style="width:125px"
                                       :format="TypeFormat"
                                       :role-change-date="true"
                                       v-on:change-date="DateFrom_Change">
                            </date-time>
                        </div>
                        <div class=" flex nopadding" style="align-items:center">
                            <label class="width-75">Đến ngày</label>
                            <date-time :date-chose="filter.DateTo" placeholder="Đến ngày" style="width:125px"
                                       :format="TypeFormat"
                                       :role-change-date="true"
                                       v-on:change-date="DateTo_Change">
                            </date-time>
                        </div>
                    </div>
                    <div class=" col-xs-12 col-md-4 col-lg-6 flex flex-end nopadding">
                        <input type="text" class="form-control " style="width:350px" placeholder="Tìm kiếm hóa đơn, khách hàng, dịch vụ"
                               v-model="filter.TextSearch"
                               v-on:keyup.enter="IconSearch_Click" />
                    </div>
                </div>
                <div class="flex flex-column">
                    <div class="table-reponsive" style="width:100%;">
                        <table class='table'>
                            <tr>
                                <th>Ngày lập hóa đơn</th>
                                <th>Mã hóa đơn</th>
                                <th>Khách hàng</th>
                                <th>Mã dịch vụ</th>
                                <th>Tên dịch vụ</th>
                                <th>Số lượng</th>
                                <th>Thành tiền</th>
                                <th>
                                    <input class="form-check-input" title="Chọn tất cả" type="checkbox"
                                           v-on:change="ChangeCheckAll">
                                </th>
                            </tr>
                            <tbody>
                                <tr v-for="(item, index) in ListData">
                                    <td>
                                        <div>
                                            {{moment(item.NgayLapHoaDon).format('DD/MM/YYYY HH:mm:ss')}}
                                        </div>
                                    </td>
                                    <td><a>{{item.MaHoaDon}}</a></td>
                                    <td>
                                        <div style="min-width:200px">
                                            {{item.TenDoiTuong}}
                                        </div>
                                    </td>
                                    <td>
                                        <a class="bold">
                                            {{item.MaHangHoa}}
                                        </a>
                                    </td>
                                    <td>
                                        {{item.TenHangHoa}}
                                    </td>
                                    <td class="text-center">
                                        {{formatNumber3Digit(item.SoLuongConLai)}}
                                    </td>
                                    <td>
                                        {{formatNumber3Digit(item.ThanhTien)}}
                                    </td>
                                    <td>
                                        <input class="form-check-input" title="Chọn tất cả" type="checkbox"
                                               v-bind:checked="$.inArray(item.ID_ChiTietGoiDV,$root.ListIDChosed) > -1"
                                               v-on:change="ChangeCheckItem(item)">
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <page-list v-bind:currentpage="filter.CurrentPage + 1"
                               v-bind:pagesize="filter.PageSize"
                               v-bind:listpage="filter.ListPage"
                               v-bind:pageview="filter.PageView"
                               v-bind:numberofpage="filter.TotalPage"
                               v-on:pageselected="ChangePage"></page-list>
                </div>
            </div>
            <div class="modal-footer ">
                <button type="button" class="btn btn-main"
                        v-on:click="clickChonTraHang">
                    <i class="fa fa-check"></i>  Đồng ý
                </button>
            </div>
        </div>
    </div>
</div>
<script src="@Url.ContentVersioned("~/Scripts/Components/page-list.js")"></script>
<script>
    var vmTraHang = new Vue({
        el: '#vmTraHang',
        components: {
            'date-time': cpmDatetime,
        },
        created: function () {
            this.TypeFormat = 'DD/MM/YYYY';
            console.log('vmTraHang')
        },
        data: {
            saveOK: true,
            isTraNhanh: true,
            ID_DonVi: null,
            LoaiHoaDon: 1,
            LoaiNganhNghe: 0,
            invoiceChosing: {},
            ListData: [],

            ListItemChosed: [],
            ListIDChosed: [],

            filter: {
                DateFrom: null,
                DateTo: null,
                TextSearch: '',
                CurrentPage: 0,
                PageSize: 10,
                TextSeach: '',
                PageView: '',
                ListPage: [],
                TotalPage: 0,
            },
        },
        methods: {
            showModal: function (txtSearch = '') {
                let self = this;
                self.saveOK = false;
                self.isTraNhanh = false;
                self.ListItemChosed = [];
                self.ListIDChosed = [];
                self.filter.CurrentPage = 0;
                if (!commonStatisJs.CheckNull(txtSearch)) {
                    self.filter.TextSearch = txtSearch;
                }
                else{
                    self.filter.TextSearch='';
                }
                self.filter.DateFrom = moment(new Date()).add(-3, 'months').format('YYYY-MM-DD');
                $('#vmTraHang').modal('show');
                self.GetListHoaDon();
            },
            IconSearch_Click: function () {
                let self = this;
                self.filter.CurrentPage = 0;
                self.GetListHoaDon();
            },

            ChangeCheckAll: async function () {
                let self = this;
                let $this = $(event.currentTarget);
                let isCheck = $this.is(':checked');

                if (isCheck) {
                    for (let i = 0; i < self.ListData.length; i++) {
                        let itFor = self.ListData[i];
                        if (self.ListIDChosed.length === 0) {
                            self.ListIDChosed.push(itFor.ID_ChiTietGoiDV);
                            self.ListItemChosed.push(itFor);
                            self.invoiceChosing = {
                                ID: itFor.ID,
                                MaHoaDon: itFor.MaHoaDon
                            };
                        }
                        else {
                            if (itFor.ID !== self.invoiceChosing.ID) {
                                ShowMessage_Danger('Vui lòng không chọn trả dịch vụ ở các hóa đơn khác nhau');
                                return;
                            }
                            self.ListIDChosed.push(itFor.ID_ChiTietGoiDV);
                            self.ListItemChosed.push(itFor);
                        }
                    }
                }
                else {
                    let arrPage = self.ListData.map(function (x) {
                        return x.ID_ChiTietGoiDV;
                    });
                    self.ListItemChosed = $.grep(self.ListItemChosed, function (x) {
                        return $.inArray(x.ID_ChiTietGoiDV, arrPage) === -1;
                    })
                    self.ListIDChosed = $.grep(self.ListIDChosed, function (x) {
                        return $.inArray(x, arrPage) === -1;
                    })
                }
            },

            ChangeCheckItem: function (item) {
                let self = this;
                let $this = $(event.currentTarget);
                let isCheck = $this.is(':checked');
                if (isCheck) {
                    if ($.inArray(item.ID_ChiTietGoiDV, self.ListIDChosed) === -1) {
                        if (self.ListIDChosed.length === 0) {
                            self.ListIDChosed.push(item.ID_ChiTietGoiDV);
                            self.ListItemChosed.push(item);

                            self.invoiceChosing = item;
                        }
                        else {
                            if (item.ID !== self.invoiceChosing.ID) {
                                ShowMessage_Danger('Vui lòng không chọn trả dịch vụ ở các hóa đơn khác nhau');
                                return;
                            }
                            self.ListIDChosed.push(item.ID_ChiTietGoiDV);
                            self.ListItemChosed.push(item);
                        }
                    }
                }
                else {
                    self.ListIDChosed = self.ListIDChosed.filter(x => x !== item.ID_ChiTietGoiDV);
                    for (let i = 0; i < self.ListItemChosed.length; i++) {
                        if (self.ListItemChosed[i].ID_ChiTietGoiDV === item.ID_ChiTietGoiDV) {
                            self.ListItemChosed.splice(i, 1);
                            break;
                        }
                    }
                }
            },

            GetListHoaDon: function () {
                let self = this;
                $('#vmTraHang table').gridLoader({ show: true });
                let param = {
                    LoaiHoaDon: self.LoaiHoaDon,
                    ID_ChiNhanhs: [self.ID_DonVi],
                    MaHoaDon: self.filter.TextSearch,
                    NgayTaoHD_TuNgay: self.filter.DateFrom,
                    NgayTaoHD_DenNgay: self.filter.DateTo,
                    CurrentPage: self.filter.CurrentPage,
                    PageSize: self.filter.PageSize,
                }
                if (navigator.onLine) {
                    ajaxHelper('/api/DanhMuc/BH_HoaDonAPI/' + 'GetAllChiTietHoaDon_afterTraHang', 'POST', param).done(function (x) {
                        if (x.res) {
                            self.ListData = x.dataSoure.data;
                            self.filter.PageView = x.dataSoure.pageview;
                            self.filter.ListPage = x.dataSoure.listpage;
                            self.filter.TotalPage = x.dataSoure.countpage;
                        }
                        $('#vmTraHang table').gridLoader({ show: false });
                    });
                }
            },
            DateFrom_Change: function (e) {
                let self = this;
                var dt = moment(e).format('YYYY-MM-DD');
                self.filter.DateFrom = dt;
                self.GetListHoaDon();
            },
            DateTo_Change: function (e) {
                let self = this;
                var dt = moment(e).format('YYYY-MM-DD');
                self.filter.DateTo = dt;
                self.GetListHoaDon();
            },
            ChangePage: function (value) {
                let self = this;
                let currentPage = value.currentPage - 1;
                if (self.filter.CurrentPage !== currentPage) {
                    self.filter.CurrentPage = currentPage;
                    self.GetListHoaDon();
                } else if (self.filter.PageSize !== value.pageSize) {
                    self.filter.PageSize = value.pageSize;
                    self.GetListHoaDon();
                }
            },
            clickChonTraHang: function () {
                let self = this;
                if (self.ListIDChosed.length === 0) {
                    ShowMessage_Danger('Vui lòng chọn dịch vụ để trả');
                    return;

                }
                self.saveOK = true;
                self.isTraNhanh = false;
                $('#vmTraHang').modal('hide');
            },
            TraNhanh: function () {
                let self = this;
                self.saveOK = true;
                self.isTraNhanh = true;
                $('#vmTraHang').modal('hide');
            },
        }
    })
</script>
