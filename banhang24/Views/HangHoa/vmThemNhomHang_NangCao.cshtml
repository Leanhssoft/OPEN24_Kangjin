<style>
    #vmThemNhomHang_NangCao .span-group {
        font-size: 14px;
        color: var(--color-main);
        text-decoration: underline
    }

    #vmThemNhomHang_NangCao th {
        text-align: center;
        vertical-align: middle
    }

    #vmThemNhomHang_NangCao .dropdown-menu li {
        padding: 3px 8px;
        border-bottom: 1px solid #cccc;
    }

    #vmThemNhomHang_NangCao .margin-top-10 {
        margin-top: 10px
    }

    #vmThemNhomHang_NangCao .td-stt {
        width: 5%;
    }
</style>
<div id="vmThemNhomHang_NangCao" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content ">
            <div class="modal-header">
                <button class="close close-modal" type="button" data-dismiss="modal">×</button>
                <h4 class="modal-title">
                    {{typeUpdate==1?'Thêm mới':'Cập nhật'}} nhóm {{sLoai}}
                </h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <div class="col-sm-3 col-lg-3 col-sm-3 col-xs-12"></div>
                    <div class="col-sm-9 col-lg-9 col-sm-9 col-xs-12">
                        <input type="checkbox" v-model="newNhomHang.LaNhomHangHoa" /> Là nhóm hàng hóa
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3 col-lg-3 col-sm-3 col-xs-12">
                        <label>Tên nhóm {{sLoai}}<span class="red">(*)</span></label>
                    </div>
                    <div class="col-sm-9 col-lg-9 col-sm-9 col-xs-12">
                        <input type="text" class="form-control" v-model="newNhomHang.TenNhomHangHoa" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-3 col-lg-3 col-sm-3 col-xs-12">
                        <label>Ghi chú</label>
                    </div>
                    <div class="col-sm-9 col-lg-9 col-sm-9 col-xs-12">
                        <textarea type="text" rows="2" v-model="newNhomHang.GhiChu" />
                    </div>
                </div>

                <div class="form-group margin-top-10">
                    <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12 nopadding-left">
                        <div class="gara-detail-sections" style="color: var(--color-main)"
                             v-on:click="OnOff_ThietLapNangCao">
                            <label for="ckThietLapNangCao">
                                Thiết lập nâng cao <input type="checkbox" id="ckThietLapNangCao" v-model="newNhomHang.ThietLapNangCao" />
                            </label>

                        </div>
                    </div>
                </div>
                <div v-if="newNhomHang.ThietLapNangCao" style="overflow:auto; max-height:450px">
                    <div class="form-group margin-top-10">
                        <div class="col-sm-3 col-lg-3 col-sm-3 col-xs-12">
                            <label>Chi nhánh áp dụng</label>
                        </div>
                        <div class="col-sm-9 col-lg-9 col-sm-9 col-xs-12">
                            <chinhanhs placeholder="Chọn chi nhánh"
                                       :colshow="1"
                                       :list-all="listData.ChiNhanhs"
                                       :list-chosed="ChiNhanhChosed"
                                       :type-data="0"
                                       :have-condition="true"
                                       :show-item-all="true"
                                       v-on:on-select-item="ChoseChiNhanh">
                            </chinhanhs>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                            <span class="span-group">Khoảng áp dụng</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                            <div class="table-reponsive table_price table_error table-frame">
                                <table class="table">
                                    <thead class="thead-boder">
                                        <tr>
                                            <th rowspan="2" class="td-stt">STT</th>
                                            <th colspan="2">Tổng tiền sử dụng</th>
                                            <th colspan="3">Hỗ trợ</th>
                                            <th rowspan="2" style="width:10%">#</th>
                                        </tr>
                                        <tr>
                                            <th>Từ</th>
                                            <th>Đến</th>
                                            <th>Giá trị</th>
                                            <th class="td-stt">%</th>
                                            <th class="td-stt">VND</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr v-for="(item, index) in KhoangApDung">
                                            <td class="text-center">
                                                {{index+ 1}}
                                            </td>
                                            <td>
                                                <input class="form-control text-right" onkeypress="keypressNumber_limitNumber(event,this)"
                                                       v-model="item.GiaTriSuDungTu"
                                                       v-on:keyup="TongTienFrom_Edit(index)" />
                                            </td>
                                            <td>
                                                <input class="form-control text-right" onkeypress="keypressNumber_limitNumber(event,this)"
                                                       v-model="item.GiaTriSuDungDen"
                                                       v-on:keyup="TongTienTo_Edit(index)" />
                                            </td>
                                            <td>
                                                <input class="form-control text-right" onkeypress="keypressNumber_limitNumber(event,this)"
                                                       v-on:keyup="GtriHotro_Edit(index)"
                                                       v-model="item.GiaTriHoTro" />
                                            </td>
                                            <td class="td-stt">
                                                <div class="plus vnd1" v-bind:class="[item.KieuHoTro?'gb':'']"
                                                     v-on:click="GtriHotro_ClickPtramVND(index, true)">%</div>
                                            </td>
                                            <td class="td-stt">
                                                <div class="plus senter1 "
                                                     v-bind:class="[item.KieuHoTro?'':'gb']"
                                                     v-on:click="GtriHotro_ClickPtramVND(index, false)">VND</div>
                                            </td>
                                            <td>
                                                <div class="flex flex-around">
                                                    <a style="font-size:20px" v-on:click="KhoangApDung_Remove(index)">
                                                        <i class="fal fa-times"></i>
                                                    </a>
                                                    <a style="font-size:20px" v-on:click="KhoangApDung_AddNew(index)">
                                                        <i class="fal fa-plus"></i>
                                                    </a>
                                                </div>

                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                            <span class="span-group">Sản phẩm hỗ trợ chung</span>
                        </div>
                    </div>
                    <div class="form-group margin-top-10">
                        <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                            <div class="css-form-detail">
                                <products :con-ton-kho="0" title="Thêm sản phẩm từ nhóm hàng"
                                          :show-gia-von="true"
                                          :show-image="false"
                                          :show-ton-kho="false"
                                          :id-chi-nhanh="ID_DonVi"
                                          :role-add="true"
                                          v-on:show-modal="showModalNhomHang(1)"
                                          v-on:chose-product="ChoseProduct_Public">
                                </products>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12" v-if="PublicProducts.length > 0">
                            <div class="table-reponsive table_price table_error table-frame"
                                 style=" overflow: auto; max-height: 400px">
                                <table class="table">
                                    <thead class="thead-boder">
                                        <tr>
                                            <th class="td-stt">STT</th>
                                            <th>Mã hàng hóa</th>
                                            <th>Tên hàng hóa</th>
                                            <th>Số lượng</th>
                                            <th class="td-stt" v-on:click="PublicProducts_RemoveAll">
                                                <span style="font-size:20px; cursor:pointer" title="Xóa tất cả">
                                                    <i class="fal fa-times"></i>
                                                </span>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr v-for="(item, index) in PublicProducts">
                                            <td class="text-center td-stt">
                                                {{index + 1}}
                                            </td>
                                            <td>
                                                {{item.MaHangHoa}}
                                            </td>
                                            <td>
                                                <span>
                                                    {{item.TenHangHoa}}
                                                </span>
                                                <span class="blue" v-if="item.TenDonViTinh">
                                                    ({{item.TenDonViTinh}})
                                                </span>
                                            </td>
                                            <td style="width:10%">
                                                <input class="form-control text-right" onkeypress="keypressNumber_limitNumber(event,this)"
                                                       v-model="item.SoLuong"
                                                       v-on:keyup="PublicProducts_EditSoLuong(index)"
                                                       v-on:keyup.13="Enter_FocusNext" />
                                            </td>
                                            <td class="text-center td-stt">
                                                <a style="font-size:20px" v-on:click="PublicProducts_Remove(index)">
                                                    <i class="fal fa-times"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                            <span class="span-group">Sản phẩm hỗ trợ theo ngày thuốc</span>
                        </div>
                    </div>
                    <div class="form-group margin-top-10">
                        <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                            <div class="css-form-detail">
                                <products :con-ton-kho="0" title="Thêm sản phẩm từ nhóm hàng"
                                          :loai-hang-hoa="1"
                                          :show-gia-von="true"
                                          :show-image="false"
                                          :show-ton-kho="false"
                                          :id-chi-nhanh="ID_DonVi"
                                          :role-add="true"
                                          v-on:show-modal="showModalNhomHang(2)"
                                          v-on:chose-product="ChoseProduct_Day">
                                </products>
                            </div>

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12" v-if="DayProducts.length > 0">
                            <div class="table-reponsive table_price table_error table-frame"
                                 style=" overflow: auto; max-height: 400px">
                                <table class="table">
                                    <thead class="thead-boder">
                                        <tr>
                                            <th class="td-stt">STT</th>
                                            <th>Mã hàng hóa</th>
                                            <th>Tên hàng hóa</th>
                                            <th>Số lượng</th>
                                            <th class="td-stt" v-on:click="DayProducts_RemoveAll">
                                                <span style="font-size:20px; cursor:pointer" title="Xóa tất cả">
                                                    <i class="fal fa-times"></i>
                                                </span>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr v-for="(item, index) in DayProducts">
                                            <td class="text-center td-stt">
                                                {{index + 1}}
                                            </td>
                                            <td>
                                                {{item.MaHangHoa}}
                                            </td>
                                            <td>
                                                <span>
                                                    {{item.TenHangHoa}}
                                                </span>
                                                <span class="blue" v-if="item.TenDonViTinh">
                                                    ({{item.TenDonViTinh}})
                                                </span>
                                            </td>
                                            <td style="width:10%">
                                                <input class="form-control text-right" onkeypress="keypressNumber_limitNumber(event,this)"
                                                       v-model="item.SoLuong"
                                                       v-on:keyup.13="Enter_FocusNext"
                                                       v-on:keyup="DayProducts_EditSoLuong(index)" />
                                            </td>
                                            <td class="text-center td-stt">
                                                <a style="font-size:20px" v-on:click="DayProducts_Remove(index)">
                                                    <i class="fal fa-times"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="container-fluid">
                    <button type="button" class="btn btn-cancel" data-dismiss="modal">
                        <i class="fal fa-ban"></i>Bỏ qua
                    </button>
                    <button type="button" class="btn btn-main" v-if="!isLoading" v-on:click="saveNhomHang">
                        <i class="fa fa-save"></i> {{typeUpdate==1?'Lưu':'Cập nhật'}}
                    </button>
                    <button type="button" class="btn btn-main" v-if="isLoading">
                        <i class="fa fa-save"></i> Đang lưu
                    </button>
                </div>
            </div>
        </div>

    </div>
</div>
<script>
    var vmThemNhomHang_NangCao = new Vue({
        el: '#vmThemNhomHang_NangCao',
        components: {
            'ddl-kieu-ap-dung': cmpDropdown1Item,
            'ddl-kieu-loai': cmpDropdown1Item,
            'products': cmpChoseProduct,
            'chinhanhs': cmpDropdownMultipleItem,
        },
        created: function () {
            let self = this;
            self.ID_DonVi = VHeader.IdDonVi;
            let arr = $.extend(true, [], VHeader.ListChiNhanh);
            arr.map(function (x) {
                x['Text1'] = x.TenDonVi
                x['Text2'] = ''
            });
            self.listData.ChiNhanhs = arr;

            let thisCN = $.grep(arr, function (x) {
                return x.ID === self.ID_DonVi;
            });
            if (thisCN.length > 0) {

                let obj = {
                    ID: thisCN[0].ID,
                    Text1: thisCN[0].Text1,
                    Text1: '',
                }
                self.ChiNhanhChosed = [obj];
            }
            console.log('vmThemNhomHang_NangCao ')

            self.urlAPI = '/api/DanhMuc/DM_NhomHangHoaAPI/';
        },
        computed: {
            sLoai: function () {
                return this.newNhomHang.LaNhomHangHoa ? 'hàng hóa' : 'dịch vụ';
            }
        },
        data: {
            saveOK: false,
            isLoading: false,
            typeUpdate: 1,// 1.insert, 2.update
            typeProduct: 1,
            nhomOld: {},
            khoangApDungOld: [],
            spHoTroOld: [],
            listData: {
                ChiNhanhs: [],
            },
            newNhomHang: {
                ID: null,
                MaNhomHangHoa: '',
                TenNhomHangHoa: null,
                LaNhomHangHoa: false,
                ThietLapNangCao: false,
                GhiChu: '',
            },

            KhoangApDung: [],
            PublicProducts: [],
            DayProducts: [],
            ChiNhanhChosed: [],
        },
        methods: {
            newKhoangApDung: function () {
                return {
                    IDRandom: CreateIDRandom('fix_'),
                    GiaTriSuDungTu: '',
                    GiaTriSuDungDen: '',
                    GiaTriHoTro: '',
                    KieuHoTro: true,
                }
            },
            KhoangApDung_AddNew: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                let obj = self.newKhoangApDung();
                self.KhoangApDung.insert(index + 1, obj);
                $(function () {
                    $this.closest('tr').next().find('td').eq(1).find('input').focus();
                })
            },
            KhoangApDung_Remove: function (index) {
                let self = this;
                if (self.KhoangApDung.length > 1) {
                    self.KhoangApDung.splice(index, 1);
                }
            },
            OnOff_ThietLapNangCao: function () {
                let self = this;
                self.newNhomHang.ThietLapNangCao = !self.newNhomHang.ThietLapNangCao;
            },
            showModal: function () {
                let self = this;
                self.saveOK = false;
                self.isLoading = false;
                self.typeUpdate = 1;

                self.newNhomHang = {
                    ID: null,
                    MaNhomHangHoa: '',
                    TenNhomHangHoa: null,
                    LaNhomHangHoa: false,
                    ThietLapNangCao: false,
                    GhiChu: '',
                    TrangThai: 0 // nhomhanghoa: đang lưu ngược trạng thái: 0.chuaxoa, 1. daxoa
                };
                self.KhoangApDung = [];
                self.KhoangApDung.push(self.newKhoangApDung());
                self.PublicProducts = [];
                self.DayProducts = [];
                self.ChiNhanhChosed = [];
                $('#vmThemNhomHang_NangCao').modal('show');
            },
            showModalUpdate: function (idNhom) {
                let self = this;
                self.saveOK = false;
                self.isLoading = false;
                self.typeUpdate = 2;
                self.PublicProducts = [];
                self.DayProducts = [];
                self.ChiNhanhChosed = [];
                self.KhoangApDung = [];
                self.khoangApDungOld = [];
                self.spHoTroOld = [];

                self.newNhomHang = {
                    ID: null,
                    MaNhomHangHoa: '',
                    TenNhomHangHoa: null,
                    LaNhomHangHoa: true,
                    ThietLapNangCao: false,
                    GhiChu: '',
                    TrangThai: 1
                };

                let lstCN = [], lstAD = [];
                $.getJSON(self.urlAPI + 'GetDM_NhomHangHoa/' + idNhom).done(function (x) {
                    self.newNhomHang.ID = x.ID;
                    self.newNhomHang.MaNhomHangHoa = x.MaNhomHangHoa;
                    self.newNhomHang.TenNhomHangHoa = x.TenNhomHangHoa;
                    self.newNhomHang.LaNhomHangHoa = x.LaNhomHangHoa;
                    self.newNhomHang.GhiChu = x.GhiChu;
                    self.newNhomHang.TrangThai = x.TrangThai;
                    console.log('xOld ', x)
                })

                $.getJSON(self.urlAPI + 'GetListDonVi_byIDNhomHang?idNhom=' + idNhom).done(function (x) {
                    if (x.res) {
                        for (let i = 0; i < x.dataSoure.length; i++) {
                            let itFor = x.dataSoure[i];
                            itFor.ID = itFor.ID_DonVi;
                            itFor.Text1 = itFor.TenDonVi;
                            lstCN.push(itFor);
                        }
                    }
                    self.ChiNhanhChosed = lstCN;
                })

                $.getJSON(self.urlAPI + 'NhomHang_GetListKhoangApDung?idNhom=' + idNhom).done(function (x) {
                    if (x.res) {
                        for (let i = 0; i < x.dataSoure.length; i++) {
                            let itFor = x.dataSoure[i];
                            if (itFor.KieuHoTro === 1) {
                                itFor.KieuHoTro = true;
                            }
                            else {
                                itFor.KieuHoTro = false;
                            }
                            itFor.GiaTriSuDungTu = formatNumber3Digit(itFor.GiaTriSuDungTu);
                            itFor.GiaTriSuDungDen = formatNumber3Digit(itFor.GiaTriSuDungDen);
                            itFor.GiaTriHoTro = formatNumber3Digit(itFor.GiaTriHoTro);
                            lstAD.push(itFor);
                        }

                        if (lstAD.length > 0) {
                            self.newNhomHang.ThietLapNangCao = true;
                            self.KhoangApDung = lstAD;
                        }
                        else {
                            self.KhoangApDung.push(self.newKhoangApDung());
                        }
                    }
                    self.nhomOld = $.extend({}, true, self.newNhomHang);// assign nhômld after check ThietLapNangCao
                    self.khoangApDungOld = $.extend([], true, lstAD);
                })

                $.getJSON(self.urlAPI + 'NhomHang_GetListSanPhamHoTro?idNhom=' + idNhom).done(function (x) {
                    let sp_public = [], sp_day = [];
                    if (x.res) {
                        sp_public = $.grep(x.dataSoure, function (x1) {
                            return x1.LaSanPhamNgayThuoc === 0;
                        });
                        sp_day = $.grep(x.dataSoure, function (x1) {
                            return x1.LaSanPhamNgayThuoc === 1;
                        });

                        self.spHoTroOld = $.extend([], true, x.dataSoure);
                    }
                    self.khoangApDungOld = $.extend([], true, x.dataSoure);
                    self.PublicProducts = sp_public;
                    self.DayProducts = sp_day;
                })
                $('#vmThemNhomHang_NangCao').modal('show');
            },
            ChoseProduct_Public: function (item) {
                let self = this;
                let obj = {
                    Id_DonViQuiDoi: item.ID_DonViQuiDoi,
                    Id_LoHang: null,
                    MaHangHoa: item.MaHangHoa,
                    TenHangHoa: item.TenHangHoa,
                    TenDonViTinh: item.TenDonViTinh,
                    SoLuong: 0
                };
                self.PublicProducts.unshift(obj);
            },
            ChoseProduct_Day: function (item) {
                let self = this;
                let obj = {
                    Id_DonViQuiDoi: item.ID_DonViQuiDoi,
                    Id_LoHang: null,
                    MaHangHoa: item.MaHangHoa,
                    TenHangHoa: item.TenHangHoa,
                    TenDonViTinh: item.TenDonViTinh,
                    SoLuong: 0
                };
                self.DayProducts.unshift(obj);
            },
            ChoseChiNhanh: function (lst) {
                let self = this;
                self.ChiNhanhChosed = lst;
            },
            showModalNhomHang: function (type) {
                let self = this;
                self.typeProduct = type;
                vmApplyGroupProduct.showModal(0, 0, null);
            },
            PublicProducts_Remove: function (index) {
                let self = this;
                for (let i = 0; i < self.PublicProducts.length; i++) {
                    if (i === index) {
                        self.PublicProducts.splice(i, 1);
                        break;
                    }
                }
            },
            PublicProducts_RemoveAll: function () {
                let self = this;
                self.PublicProducts = [];
            },
            DayProducts_RemoveAll: function () {
                let self = this;
                self.DayProducts = [];
            },
            DayProducts_Remove: function (index) {
                let self = this;
                for (let i = 0; i < self.DayProducts.length; i++) {
                    if (i === index) {
                        self.DayProducts.splice(i, 1);
                        break;
                    }
                }
            },
            Enter_FocusNext: function () {
                let self = this;
                let $this = $(event.currentTarget);
                let $tr = $this.closest('tr').next();
                $tr.find('td').eq(3).find('input').focus().select();
            },
            ApplyGroup: function () {
                let self = this;

                let param = {
                    ID_DonVi: self.ID_DonVi,
                    IDNhomHangs: vmApplyGroupProduct.arrIDNhomChosed,
                    LoaiHangHoas: '1,2',// hanghoa + dv
                }
                ajaxHelper('/api/DanhMuc/BH_DieuChinh/' + 'getListHangHoaBy_IDNhomHang', 'POST', param).done(function (x) {
                    if (x.res) {
                        let data = x.dataSoure;
                        switch (self.typeProduct) {
                            case 1:
                                for (let i = 0; i < data.length; i++) {
                                    let itFor = data[i];
                                    itFor.SoLuong = 0;
                                    self.PublicProducts.unshift(itFor);
                                }
                                break;
                            case 2:
                                for (let i = 0; i < data.length; i++) {
                                    let itFor = data[i];
                                    itFor.SoLuong = 0;
                                    self.DayProducts.unshift(itFor);
                                }
                                break;
                        }
                    }
                })
            },
            TongTienFrom_Edit: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                formatNumberObj($this);

                let gtri = $this.val();
                for (let i = 0; i < self.KhoangApDung.length; i++) {
                    if (i === index) {
                        self.KhoangApDung[i].GiaTriSuDungTu = gtri;
                        break;
                    }
                }
            },
            TongTienTo_Edit: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                formatNumberObj($this);

                let gtri = $this.val();
                for (let i = 0; i < self.KhoangApDung.length; i++) {
                    if (i === index) {
                        self.KhoangApDung[i].GiaTriSuDungDen = gtri;
                        break;
                    }
                }
            },
            GtriHotro_Edit: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                formatNumberObj($this);

                let gtri = $this.val();
                for (let i = 0; i < self.KhoangApDung.length; i++) {
                    if (i === index) {
                        if (self.KhoangApDung[i].KieuHoTro) {
                            if (formatNumberToFloat(gtri) > 100) {
                                $this.val(100);
                                gtri = 100;
                            }
                        }
                        self.KhoangApDung[i].GiaTriHoTro = gtri;
                        break;
                    }
                }
            },
            GtriHotro_ClickPtramVND: function (index, isPtram = true) {
                let self = this;
                let $this = $(event.currentTarget);
                formatNumberObj($this);

                for (let i = 0; i < self.KhoangApDung.length; i++) {
                    if (i === index) {
                        self.KhoangApDung[i].KieuHoTro = isPtram;
                        break;
                    }
                }
            },
            PublicProducts_EditSoLuong: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                for (let i = 0; i < self.PublicProducts.length; i++) {
                    if (i === index) {
                        self.PublicProducts[i].SoLuong = $this.val();
                        break;
                    }
                }
            },
            DayProducts_EditSoLuong: function (index) {
                let self = this;
                let $this = $(event.currentTarget);
                for (let i = 0; i < self.DayProducts.length; i++) {
                    if (i === index) {
                        self.DayProducts[i].SoLuong = $this.val();
                        break;
                    }
                }
            },
            CheckSave: function () {
                let self = this;
                if (self.ChiNhanhChosed.length === 0) {
                    ShowMessage_Danger('Vui lòng chọn chi nhánh áp dụng');
                    return false;
                }
                for (let i = 0; i < self.KhoangApDung.length; i++) {
                    let itFor = self.KhoangApDung[i];
                    let from = formatNumberToFloat(itFor.GiaTriSuDungTu);
                    let to = formatNumberToFloat(itFor.GiaTriSuDungDen);
                    let gtriHoTro = formatNumberToFloat(itFor.GiaTriHoTro);
                    if (to === 0) {
                        ShowMessage_Danger("Vui lòng nhập khoảng giá trị");
                        return false;
                    }
                    if (gtriHoTro === 0) {
                        ShowMessage_Danger("Vui lòng nhập giá trị hỗ trợ");
                        return false;
                    }
                    if (from > to) {
                        ShowMessage_Danger("Tổng tiền từ không được lớn hơn tổng tiền đến");
                        return false;
                    }

                    let arr = $.grep(self.KhoangApDung, function (x, index) {
                        return formatNumberToFloat(x.GiaTriSuDungDen) >= from
                            && formatNumberToFloat(x.GiaTriSuDungTu) <= to && index !== i;
                    });
                    if (arr.length > 0) {
                        ShowMessage_Danger("Khoảng áp dụng không được gối trùng lên nhau");
                        return false;
                    }
                }

                if (self.PublicProducts.length === 0 && self.DayProducts.length === 0) {
                    ShowMessage_Danger('Vui lòng chọn sản phẩm hỗ trợ');
                    return false;
                }

                //let arrNumber0 = $.grep(self.PublicProducts, function (x) {
                //    return formatNumberToFloat(x.SoLuong) == 0;
                //})
                //if (arrNumber0.length > 0) {
                //    ShowMessage_Danger('Sản phẩm chung: Chưa nhập đủ thông tin cột Số lượng');
                //    return false;
                //}

                //arrNumber0 = $.grep(self.DayProducts, function (x) {
                //    return formatNumberToFloat(x.SoLuong) == 0;
                //})
                //if (arrNumber0.length > 0) {
                //    ShowMessage_Danger('Sản phẩm ngày thuốc: Chưa nhập đủ thông tin cột Số lượng');
                //    return false;
                //}
                return true;
            },
            ChiTietApDung_AssignNhomHang: function (idNhom) {
                let self = this;
                let allCN = false;
                let cnApply = [];
                if (self.ChiNhanhChosed.length === 1) {
                    if (self.ChiNhanhChosed[0].ID === null) {
                        allCN = true;
                    }
                }

                if (!allCN) {
                    for (let i = 0; i < self.ChiNhanhChosed.length; i++) {
                        let itFor = self.ChiNhanhChosed[i];
                        itFor.ID_DonVi = itFor.ID;
                        itFor.ID_NhomHangHoa = idNhom;
                        cnApply.push(itFor);
                    }
                }
                else {
                    cnApply = [{ ID_NhomHangHoa: idNhom, ID_DonVi: self.ID_DonVi }]
                }

                let lstSP = [];
                // sort khoangApDung --> assign SoThuTu
                self.KhoangApDung = self.KhoangApDung.sort(function (a, b) {
                    let x = formatNumberToFloat(a.GiaTriHoTro),
                        y = formatNumberToFloat(b.GiaTriHoTro);
                    return x > y ? 1 : x < y ? -1 : 0
                });

                for (let i = 0; i < self.KhoangApDung.length; i++) {
                    let itFor = self.KhoangApDung[i];
                    itFor.GiaTriSuDungTu = formatNumberToFloat(itFor.GiaTriSuDungTu);
                    itFor.Id_NhomHang = idNhom;
                    if (itFor.KieuHoTro) {
                        itFor.KieuHoTro = 1;
                    }
                    else {
                        itFor.KieuHoTro = 0;
                    }
                    itFor.STT = i + 1;
                }

                for (let i = 0; i < self.PublicProducts.length; i++) {
                    let itFor = self.PublicProducts[i];
                    itFor.Id_NhomHang = idNhom;
                    itFor.LaSanPhamNgayThuoc = 0;
                    lstSP.push(itFor);
                }
                for (let i = 0; i < self.DayProducts.length; i++) {
                    let itFor = self.DayProducts[i];
                    itFor.Id_NhomHang = idNhom;
                    itFor.LaSanPhamNgayThuoc = 1;
                    lstSP.push(itFor);
                }
                return {
                    AllCN: allCN,
                    CNApDung: cnApply,
                    KhoangApDung: self.KhoangApDung,
                    ListProduct: lstSP,
                }
            },
            saveNhomHang: function () {
                let self = this;
                if (commonStatisJs.CheckNull(self.newNhomHang.TenNhomHangHoa)) {
                    ShowMessage_Danger('Vui lòng nhập tên nhóm hàng hóa');
                    return false;
                }
                if (self.newNhomHang.ThietLapNangCao) {
                    let check = self.CheckSave();
                    if (!check) {
                        return;
                    }
                }

                let obj = {
                    TenNhomHangHoa: self.newNhomHang.TenNhomHangHoa,
                    LaNhomHangHoa: self.newNhomHang.LaNhomHangHoa,
                    ID_Parent: null,
                    NguoiTao: VHeader.UserLogin,
                    GhiChu: self.newNhomHang.GhiChu,
                    TrangThai: 0
                };

                let sListSP = '';
                if (self.newNhomHang.ThietLapNangCao) {
                    if (self.PublicProducts.length > 0) {
                        sListSP = '<br /> Sản phẩm hỗ trợ chung gồm:';

                        let sChung = '';
                        for (let i = 0; i < self.PublicProducts.length; i++) {
                            let itFor = self.PublicProducts[i];
                            sChung += ' <br /> '.concat(i + 1, '. ', itFor.TenHangHoa, ' (', itFor.MaHangHoa, ') Số lượng ', itFor.SoLuong);
                        }
                        sListSP += sChung;
                    }

                    if (self.DayProducts.length > 0) {
                        sListSP += '<br /> Sản phẩm hỗ trợ ngày thuốc gồm:';

                        let sChung = '';
                        for (let i = 0; i < self.DayProducts.length; i++) {
                            let itFor = self.DayProducts[i];
                            sChung += ' <br /> '.concat(i + 1, '. ', itFor.TenHangHoa, ' (', itFor.MaHangHoa, ') Số lượng ', itFor.SoLuong);
                        }
                        sListSP += sChung;
                    }
                }

                if (self.typeUpdate === 1) {
                    obj.NguoiTao = VHeader.UserLogin;

                    ajaxHelper(self.urlAPI + 'PostDM_NhomHangHoa', 'POST', obj).done(function (x) {

                        ShowMessage_Success("Thêm mới nhóm " + self.sLoai + " thành công");

                        let objNhatKy = {
                            LoaiNhatKy: 1,
                            ID_DonVi: self.ID_DonVi,
                            ID_NhanVien: VHeader.IdNhanVien,
                            ChucNang: 'Thêm nhóm ' + self.sLoai,
                            NoiDung: 'Thêm nhóm '.concat(self.sLoai, ' <b> ', self.newNhomHang.TenNhomHangHoa, ' </b>'),
                            NoiDungChiTiet: 'Thêm nhóm '.concat(self.sLoai,
                                '<br /> <b> Thông tin chi tiết: </b> ',
                                '<br /> Tên nhóm: ', self.newNhomHang.TenNhomHangHoa,
                                '<br /> Là nhóm hàng hóa: ' + self.newNhomHang.LaNhomHangHoa,
                                '<br /> Người tạo: ', VHeader.UserLogin,
                                sListSP),
                        };
                        Insert_NhatKyThaoTac_1Param(objNhatKy);

                        let idNhom = x.ID;
                        let param = self.ChiTietApDung_AssignNhomHang(idNhom);
                        let myData = {
                            lstKhoangApDung: param.KhoangApDung,
                            lstSPHoTro: param.ListProduct,
                        }

                        ajaxHelper(self.urlAPI + 'PostNhomHang_DonVi?checkAll=' + param.AllCN, 'POST', param.CNApDung).done(function (x) {
                            console.log('PostNhomHang_DonVi ', x)
                        })

                        ajaxHelper(self.urlAPI + 'PostNhomHang_ChiTietApDung', 'POST', myData).done(function (x) {
                            console.log('PostNhomHang_ChiTietApDung ', x)
                            if (x.res) {

                            }
                        })
                    }).always(function () {
                        self.isLoading = false;
                        $('#vmThemNhomHang_NangCao').modal('hide');
                    })
                }
                else {
                    let idNhom = self.newNhomHang.ID;
                    obj.ID = self.newNhomHang.ID;
                    obj.NguoiSua = VHeader.UserLogin;

                    let objU = {
                        id: self.newNhomHang.ID,
                        dM_NhomHangHoa: obj
                    }

                    // check thay doi nhomhang ---> nhom dichvu (va nguoc lai)

                    //if (self.typeUpdate === 2 && self.nhomOld.LaNhomHangHoa !== self.newNhomHang.LaNhomHangHoa) {
                    //    let sLoaiOld = self.nhomOld.LaNhomHangHoa ? 'hàng hóa' : 'dịch vụ';
                    //    dialogConfirm('Thông báo', 'Bạn vừa thay đổi từ nhóm <b>' + sLoaiOld + ' </b> sang  <b>' + self.sLoai + ' </b>' +
                    //        ' <br /> Bạn có muốn cập nhật loại hàng cho các hàng hóa thuộc nhóm không ? ', function () {

                    //        });
                    //}

                    let sListSPOld = '';
                    if (self.nhomOld.ThietLapNangCao) {
                        if (self.spHoTroOld.length > 0) {

                            let sChung = '', sNgay = '';
                            let arrChung = $.grep(self.spHoTroOld, function (x) {
                                return x.LaSanPhamNgayThuoc === 0;
                            })
                            if (arrChung.length > 0) {
                                sListSPOld = '<br /> Sản phẩm hỗ trợ chung gồm: ';
                                for (let i = 0; i < arrChung.length; i++) {
                                    let itFor = arrChung[i];
                                    sChung += ' <br /> '.concat(i + 1, '. ', itFor.TenHangHoa, ' (', itFor.MaHangHoa, ') Số lượng ', itFor.SoLuong);
                                }
                                sListSPOld += sChung;
                            }

                            let arrNgay = $.grep(self.spHoTroOld, function (x) {
                                return x.LaSanPhamNgayThuoc === 1;
                            });
                            if (arrNgay.length > 0) {
                                sListSPOld += '<br /> Sản phẩm hỗ trợ ngày thuốc gồm: ';
                                for (let i = 0; i < arrNgay.length; i++) {
                                    let itFor = arrNgay[i];
                                    sNgay += ' <br /> '.concat(i + 1, '. ', itFor.TenHangHoa, ' (', itFor.MaHangHoa, ') Số lượng ', itFor.SoLuong);
                                }
                                sListSPOld += sNgay;
                            }
                        }
                    }

                    ajaxHelper(self.urlAPI + 'PutDM_NhomHangHoa', 'POST', objU).done(function (x) {
                        ShowMessage_Success("Cập nhật nhóm " + self.sLoai + " thành công");

                        let objNhatKy = {
                            LoaiNhatKy: 2,
                            ID_DonVi: self.ID_DonVi,
                            ID_NhanVien: VHeader.IdNhanVien,
                            ChucNang: 'Cập nhật nhóm ' + self.sLoai,
                            NoiDung: 'Cập nhật nhóm '.concat(self.sLoai, ' <b> ', self.newNhomHang.TenNhomHangHoa, ' </b>'),
                            NoiDungChiTiet: 'Cập nhật nhóm '.concat(self.sLoai,
                                '<br /> <b> Thông tin chi tiết: </b> ',
                                '<br /> Tên nhóm: ', self.newNhomHang.TenNhomHangHoa,
                                '<br /> Là nhóm hàng hóa: ' + self.newNhomHang.LaNhomHangHoa,
                                '<br /> Thiết lập nâng cao: ', self.newNhomHang.ThietLapNangCao,
                                '<br /> Người sửa: ', VHeader.UserLogin, sListSP,
                                '<br /> <b> Thông tin cũ: </b> <br /> Tên nhóm: ' + self.nhomOld.TenNhomHangHoa,
                                '<br /> Là nhóm hàng hóa: ' + self.nhomOld.LaNhomHangHoa,
                                '<br /> Thiết lập nâng cao: ' + self.nhomOld.ThietLapNangCao, sListSPOld),
                        };
                        Insert_NhatKyThaoTac_1Param(objNhatKy);

                        let param = self.ChiTietApDung_AssignNhomHang(idNhom);
                        let myData = {
                            lstKhoangApDung: param.KhoangApDung,
                            lstSPHoTro: param.ListProduct,
                        }

                        if (!self.newNhomHang.ThietLapNangCao) {
                            // reset CNApDung, SPHoTro
                            param.CNApDung = [];
                            myData = {
                                lstKhoangApDung: [],
                                lstSPHoTro: [],
                            }
                        }

                        ajaxHelper(self.urlAPI + 'PostNhomHang_DonVi?checkAll=' + param.AllCN + '&idNhomHang=' + idNhom, 'POST', param.CNApDung).done(function (x) {
                            console.log('PostNhomHang_DonVi ', x)
                        })

                        ajaxHelper(self.urlAPI + 'PostNhomHang_ChiTietApDung?idNhomHang=' + idNhom, 'POST', myData).done(function (x) {
                            console.log('PostNhomHang_ChiTietApDung ', x)
                            if (x.res) {

                            }
                        })

                    }).always(function () {
                        self.isLoading = false;
                        $('#vmThemNhomHang_NangCao').modal('hide');
                    })
                }
            }
        }
    })

    $('#vmApplyGroupProduct').on('hidden.bs.modal', function () {
        if (vmApplyGroupProduct.saveOK) {
            vmThemNhomHang_NangCao.ApplyGroup();
        }
    })

    // insert object at index
    Array.prototype.insert = function (index, item) {
        this.splice(index, 0, item);
    };
</script>