@model Model_banhang24vn.CuaHangDangKy
@using System.Web.Optimization
@{
    ViewBag.Title = "Open24.vn - Đăng ký sử dụng";
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0" />
    <title>DangKySuDung</title>
</head>
<body>
    <div id="gioithieu" class="container-fluid">
        <div class="container container-table">
            <div class="row vertical-center-row">
                <h1 class="text-center">Website open24.vn</h1>
                <h4 class="text-center">Bán hàng 24 tiện lợi, tối ưu, chính xác</h4>
                <hr />
            </div>
        </div>
    </div>
    <div id="dangky" class="container-fluid">
        <div class="container container-table">
            <div class="row vertical-center-row">

                <div class="col-sm-offset-1 col-sm-3">
                </div>
                <div class="col-sm-8">
                    <h2 class="text-center">Đăng ký sử dụng</h2>
                    @using (Html.BeginForm("DangKySuDung", "Home", FormMethod.Post, new { onkeydown = "return event.keyCode!=13", onsubmit = "return validateForm()" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <h4 class="text-danger">@ViewBag.Message</h4>

                        <div class="form-group">
                            @Html.LabelFor(model => model.HoTen, "Họ tên (*)", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control", @placeholder = "Họ tên" } })
                                @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SoDienThoai, "Điện thoại (*)", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.SoDienThoai, new { htmlAttributes = new { @class = "form-control", @type = "tel" } })
                                @Html.ValidationMessageFor(model => model.SoDienThoai, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, "Email (*)", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TenCuaHang, "Tên cửa hàng kinh doanh", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.TenCuaHang, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TenCuaHang, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ID_NganhKinhDoanh, "Ngành nghề kinh doanh", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.DropDownList("ID_NganhKinhDoanh", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ID_NganhKinhDoanh, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SubDomain, "Địa chỉ Website muốn đăng ký (*)", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12" style="font-size: small"><i>*** viết liền, không dấu ***</i></div>
                            <div class="col-md-12">
                                <div class="input-group">
                                    @*has-success has-feedback*@
                                    @Html.EditorFor(model => model.SubDomain, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SubDomain, "", new { @class = "text-danger" })
                                    <span class="input-group-addon">.open24.vn</span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DiaChi, "Địa chỉ", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserKT, "Tên đăng nhập (*)", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.UserKT, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserKT, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MatKhauKT, "Mật khẩu (*)", htmlAttributes: new { @class = "control-label col-xs-12 col-sm-6 col-md-6" })
                            <label for="txtMatKhau2" class="col-xs-12 col-sm-6 col-md-6 control-label">Nhập lại Mật khẩu (*)</label>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.MatKhauKT, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                                @Html.ValidationMessageFor(model => model.MatKhauKT, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <input type="password" class="form-control" name="txtMatKhau2" id="txtMatKhau2" placeholder="Nhập lại mật khẩu">
                            </div>
                        </div>
                        <div class="form-group">
                            <br />
                            <label class="col-xs-12 col-sm-12 col-md-12 control-label">&nbsp;&nbsp;&nbsp; </label>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12">
                                <input class="form-control" placeholder="Mã xác thực" />
                            </div>
                        </div>
                        <div class="form-group">
                            <br />
                            <label class="col-xs-12 col-sm-12 col-md-12 control-label">&nbsp;&nbsp;&nbsp; </label>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-3">
                                <button type="submit" class="btn btn-block btn-success">Đăng ký</button>
                            </div>
                        </div>
                        <div class="form-group">
                            <br />
                            <label class="col-xs-12 col-sm-12 col-md-12 control-label">&nbsp;&nbsp;&nbsp; </label>
                        </div>

                    }
                </div>
            </div>
        </div>
    </div>

</body>
</html>
<script>
    function validateForm() {
        var strSDT = $("#SoDienThoai").val();
        if (strSDT == null || strSDT == "") {
            alert("Chưa nhập số điện thoại");
            $('#SoDienThoai').focus();
            return false;
        }
        var strHoTen = $("#HoTen").val();
        if (strHoTen == null || strHoTen == "") {
            alert("Chưa nhập Họ tên");
            $('#HoTen').focus();
            return false;
        }

        var strSubdomain = $("#SubDomain").val();
        var url = "http://" + strSubdomain + ".open24.vn/";
        var re = /^(http[s]?:\/\/){0,1}(www\.){0,1}[a-zA-Z0-9\.\-]+\.[a-zA-Z]{2,5}[\.]{0,1}/;
        if (!re.test(url)) {
            alert("Tên miền chưa hợp lệ");
            $('#SubDomain').focus();
            return false;
        }
        var strUserKT = $("#UserKT").val();
        if (strUserKT == null || strUserKT == "") {
            alert("Chưa nhập Tên đăng nhập");
            $('#UserKT').focus();
            return false;
        }

        var strMatKhau = $("#MatKhauKT").val();
        if (strMatKhau == null || strMatKhau == "") {
            alert("Chưa nhập mật khẩu");
            $('#MatKhauKT').focus();
            return false;
        }

        var strMatKhau2 = $("#txtMatKhau2").val();
        if (strMatKhau2 == null || strMatKhau2 == "") {
            alert("Chưa nhập xác nhận mật khẩu");
            $('#txtMatKhau2').focus();
            return false;
        }

        if (strMatKhau2 != strMatKhau) {
            alert("Xác nhận mật khẩu chưa trùng khớp");
            $('#txtMatKhau2').focus();
            return false;
        }
    }
</script>
